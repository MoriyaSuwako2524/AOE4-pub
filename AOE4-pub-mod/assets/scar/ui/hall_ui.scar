-- 大厅ui界面：各类卡牌的管理
import("util/common_header.scar")
import("cards/player_cards.scar")
import("gameplay/player_mgr.scar")
import("cards/ability_cards.scar")
import("cards/race_ability.scar")
import("ui/hall_ui_xaml_en.scar")
-- Width="1920" Height="{Binding [screenHeight], Converter={StaticResource CastToIntOperator}}"
-- d:DesignHeight="1080" d:DesignWidth="1920"
_hall_ui_xaml = [[<Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0" 
		xmlns:engineHUDPages="clr-namespace:WPFGUI.HUD.Pages;assembly=EngineUI"
		Orientation="Horizontal" Visibility="{Binding [show], Converter={StaticResource BoolToVis}}" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
		xmlns:engineSharedControls="clr-namespace:WPFGUI.Shared.Controls;assembly=EngineUI"
		xmlns:sharedConverters="clr-namespace:WPFGUI.Shared.Converters;assembly=EngineUI"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:esControls="clr-namespace:WPFGUI.Shared.Controls;assembly=EngineUI"		
xmlns:esUtility="clr-namespace:WPFGUI.Shared.Utility;assembly=EngineUI"
xmlns:engineSharedEffects="clr-namespace:WPFGUI.Shared.Effects;assembly=EngineUI.Shaders"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		mc:Ignorable="d">


		<Grid.Resources>
		
		<Style x:Key="TavernNewBtn" TargetType="Button">
			<Setter Property="MinWidth" Value="{StaticResource ButtonMinWidth}" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Margin" Value="0,0,0,0" />
			<Setter Property="Template">
	        <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                 	<Border x:Name="TavernNewBtnBorder">
	                        <Grid>
								<Rectangle x:Name="Background"
                                   Fill="#101012" />
								<Grid Style="{StaticResource ButtonTextBlockWrapper}">
									<TextBlock x:Name="Text"
	                                   engineSharedControls:TextBlockExtensions.AutoToolTip="True"
	                                   Effect="{DynamicResource TextDropShadowEffect}"
	                                   IsHitTestVisible="{Binding ToolTip, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullConverter}}"
	                                   Style="{DynamicResource ButtonTextBlock}"
	                                   Text="{TemplateBinding Content}"
	                                   TextTrimming="CharacterEllipsis" ToolTipService.InitialShowDelay="0"
	                                   ToolTipService.ShowDuration="86400000" ToolTipService.ShowOnDisabled="True">
				                            <TextBlock.ToolTip>
				                                <ToolTip Style="{StaticResource BaseAutoTooltipAllCapsStyle}" />
				                            </TextBlock.ToolTip>
				                        </TextBlock>
								</Grid>
	                        </Grid>
	                    </Border>
						<ControlTemplate.Triggers>
	                         <Trigger Property="IsEnabled" Value="True">
								<Setter TargetName="Text" Property="Foreground" Value="#d4af67" />
					        </Trigger>
					        <Trigger Property="IsEnabled" Value="False">
					           <Setter TargetName="Text" Property="Foreground" Value="#3a3d3f" />
					        </Trigger>
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
			
		</Style>
		
		<sys:Double x:Key="CardOpacity">0.6</sys:Double>
		
		<sys:Double x:Key="SquadCardContentWidth">176</sys:Double>
		<sys:Double x:Key="SquadCardContentHeight">216</sys:Double>
		
		<Style x:Key="TavernCardBorder" TargetType="Border">
			<Setter Property="BorderBrush" Value="#55020403" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        BlurRadius="2"
                        Opacity="0.3"
                        ShadowDepth="2"
                        Color="#55020403" />
                </Setter.Value>
            </Setter>	
		</Style>
		
		<Style x:Key="TavernButtonStyle" TargetType="Button">
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="Transparent" />
	        <Setter Property="SnapsToDevicePixels" Value="true" />
	        <Setter Property="OverridesDefaultStyle" Value="true" />
	        <Setter Property="HorizontalAlignment" Value="Left" />
	        <Setter Property="Width" Value="47" />
	        <Setter Property="Height" Value="47" />
			<Setter Property="esUtility:AudioAttachedProperty.PreviewMouseLeftButtonUpSound"
	                Value="sfx_ui_hud_inGame_button_play" />
	        <Setter Property="Template">
	            <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                    <Border Name="ResourceButton">
	                        <Grid>
								<Border Background="{DynamicResource TertiaryColorLightBrush}">
									<Border>
										<Border.Background>
											<RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.7" RadiusY="0.6">
										        <GradientStop Offset="0" Color="{DynamicResource TertiaryColorExtraLight}" />
										        <GradientStop Offset="1" Color="{DynamicResource TertiaryColorExtraLightTransparent}" />
										    </RadialGradientBrush>
										</Border.Background>
									</Border>
                                </Border>
								
	                            <Rectangle Name="Base" Fill="#33505050" />
	                            
								<Rectangle Name="Rollover" Fill="{StaticResource ButtonHighlightBrush}" Visibility="Collapsed" />
	                            
								<Rectangle Name="Highlight" Fill="#FF93BED7" Visibility="Collapsed" />
								
	                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	                        </Grid>
	                    </Border>
	                    <ControlTemplate.Triggers>
	                        <Trigger Property="IsMouseOver" Value="true">
	                            <Setter TargetName="Rollover" Property="Visibility" Value="Visible" />
	                        </Trigger>
	                        <Trigger Property="IsPressed" Value="true">
	                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
	                        </Trigger>
	                        <Trigger Property="IsEnabled" Value="false">
								 <Setter TargetName="ResourceButton" Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
	                        </Trigger>
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
	    </Style>	
		
		
		<Style x:Key="CardButtonStyle" TargetType="Button">
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="Transparent" />
	        <Setter Property="SnapsToDevicePixels" Value="true" />
	        <Setter Property="OverridesDefaultStyle" Value="true" />
	        <Setter Property="HorizontalAlignment" Value="Left" />
	        <Setter Property="Width" Value="47" />
	        <Setter Property="Height" Value="47" />
			<Setter Property="Opacity" Value="1" />
			<Setter Property="esUtility:AudioAttachedProperty.PreviewMouseLeftButtonUpSound"
	                Value="sfx_ui_hud_inGame_button_play" />
	        <Setter Property="Template">
	            <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                 	<Border Name="ResourceButton">
	                        <Grid>
								<!--
								<Border Background="{DynamicResource TertiaryColorLightBrush}">
									<Border>
										<Border.Background>
											<RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.7" RadiusY="0.6">
										        <GradientStop Offset="0" Color="{DynamicResource TertiaryColorExtraLight}" />
										        <GradientStop Offset="1" Color="{DynamicResource TertiaryColorExtraLightTransparent}" />
										    </RadialGradientBrush>
										</Border.Background>
									</Border>
                                </Border>
								-->
								
	                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	                        </Grid>
	                    </Border>
	                    <ControlTemplate.Triggers>
	                        <Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Opacity" Value="1" />
	                        </Trigger>
	                      
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
	    </Style>	
		
	
		<DataTemplate x:Key="HallRole">
				 <DataTemplate.Resources>
		            <SolidColorBrush x:Key="BalanceBorderBrush" Color="#5e6989"/>
		            <SolidColorBrush x:Key="BalanceTickBrush" Color="#41485C"/>
		        </DataTemplate.Resources>
			<Button Width="{Binding [width], Converter={StaticResource CastToIntOperator}}"
								Height="{Binding [height], Converter={StaticResource CastToIntOperator}}"
					Margin="2,2,2,0"
				ToolTipService.InitialShowDelay="0"
    			ToolTipService.ShowDuration="86400000"
				ToolTipService.ShowOnDisabled="True"
				Style="{StaticResource CardButtonStyle}" 
				Command="{Binding [changeLocalPlayerCmd]}"
				CommandParameter="{Binding [changeLocalPlayerCmdParam]}"
				>
				
				<Button.Content>
				
				<Border BorderBrush="{Binding [Color]}"
					VerticalAlignment="Top" Style="{StaticResource TavernCardBorder}" >
					<Grid Width="{Binding [width], Converter={StaticResource CastToIntOperator}}"
								Height="{Binding [height], Converter={StaticResource CastToIntOperator}}">
						<!-- 
						<Image Width="{Binding [width], Converter={StaticResource CastToIntOperator}}"
								Height="{Binding [width], Converter={StaticResource CastToIntOperator}}"
								Source="{Binding [role][icon]}"/>
					 
					
						<TextBlock 
							    Margin="0,0,12,0"
								VerticalAlignment="Bottom"
								HorizontalAlignment="Center"
								Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"
								Text="{Binding [role][name]}"
		                		Effect="{StaticResource DropShadow}"
								/>
					 -->
					<Image Width="{Binding [width], Converter={StaticResource CastToIntOperator}}"
							VerticalAlignment="Top"
								Height="{Binding [imgHeight], Converter={StaticResource CastToIntOperator}}"
								Stretch="Fill" 
								Source="{Binding [civIcon]}"/>
					 
					
						<TextBlock 
							    Margin="0,0,0,12"
								VerticalAlignment="Bottom"
								HorizontalAlignment="Center"
								Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"
								Text="{Binding [playerName]}"
								Foreground="{Binding [playerColor]}"
								TextTrimming="CharacterEllipsis"
		                		Effect="{StaticResource DropShadow}"
								/>
						
						<Border Height="10" Width="{Binding [width], Converter={StaticResource CastToIntOperator}}" VerticalAlignment="Bottom" HorizontalAlignment="Left" 
							BorderBrush="{StaticResource BalanceBorderBrush}" BorderThickness="0">
							<Grid>
								<Rectangle Fill="Red" Width="{Binding [healthWidth], Converter={StaticResource CastToIntOperator}}" HorizontalAlignment="Left" />
								
								<!--
								<Rectangle Fill="{DynamicResource CasterTransparentToWhiteOverlayBrush}" RenderTransformOrigin=".5,.5">
									<Rectangle.RenderTransform>
										<ScaleTransform ScaleX="1" />
									</Rectangle.RenderTransform>
								</Rectangle>
								-->
							</Grid>
						</Border>
					
						<Grid  HorizontalAlignment="Center"
	                                              VerticalAlignment="Top"
	                                              IsHitTestVisible="False"
	                                              Visibility="{Binding [isReady], Converter={StaticResource BoolToVis}}">
                                <Ellipse Width="26" Height="26"
                                         Fill="{DynamicResource BlackTransparent40Brush}"
                                         Stroke="{DynamicResource PrimaryColorLightBrush}"
                                         StrokeThickness="2" />
                                <Viewbox Width="15">
                                    <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Style="{StaticResource FrontEndCheckMark}" />
                                </Viewbox>
                            </Grid>
							
						<Grid.ToolTip>
					
							 <ToolTip MaxWidth="300"
		                     Placement="Bottom"
		                     Style="{StaticResource TributeToolTipStyle}"
							DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
							 Content="{Binding}" 
		                     VerticalOffset="6">
								<ToolTip.ContentTemplate>
									<DataTemplate>
							                <ContentControl Style="{StaticResource HUDTooltipBorderStyle}">
							                    <StackPanel Orientation="Vertical">
													<StackPanel Orientation="Horizontal">
														<!-- 玩家名 -->
														<TextBlock Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}"
							                               Text="{Binding [playerName]}"
							                               TextWrapping="Wrap" />
													</StackPanel>
													<StackPanel Orientation="Horizontal">
														<TextBlock Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}" Text="{Binding [loc9]}" />
														<TextBlock  Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}" Text="{Binding [health], Converter={StaticResource CastToIntOperator} }" />
													</StackPanel>
													<StackPanel Orientation="Horizontal">
														<TextBlock Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}" Text="{Binding [loc10]}" />
														<TextBlock  Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}" Text="{Binding [level], Converter={StaticResource CastToIntOperator}}" />
													</StackPanel>
													<StackPanel Orientation="Horizontal">
														<TextBlock Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}" TextWrapping="Wrap" Text="{Binding [desc]}" Foreground="AliceBlue" />
													</StackPanel>
												</StackPanel>
							                </ContentControl>
										</DataTemplate>
									</ToolTip.ContentTemplate>
				            </ToolTip>
						</Grid.ToolTip>
					</Grid>
					
				</Border>		
				
			</Button.Content>
				</Button>
		</DataTemplate>
		
		<DataTemplate x:Key="HallRoles">
			<ItemsControl Name="ShowRoles" 
					ItemsSource="{Binding [players]}"
					HorizontalAlignment="Left"
					ItemTemplate="{StaticResource HallRole}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" FlowDirection="LeftToRight"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
		</DataTemplate>
		
		
		
		
		
		<DataTemplate x:Key="SquadCardHeader" >
			<!-- 顶栏 -->
			<StackPanel Width="{StaticResource SquadCardContentWidth}" Orientation="Horizontal"  VerticalAlignment="Top" >
				
				<Grid Width="45" HorizontalAlignment="Left" Margin="-2,-2,0,0">
					<!-- 卡牌等级 -->
					<Image Width="45"
							Source="{Binding [racePresetIcon]}"
							HorizontalAlignment="Center"/>
				</Grid>
				
				<StackPanel Width="110" Margin="-5,0,0,0">
					<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" Text="{Binding [name]}" TextTrimming="CharacterEllipsis" 
						Width="100" Margin="0,10,0,0"  Foreground="#d4af67" HorizontalAlignment="Center" TextAlignment="Center"> 
						<TextBlock.ToolTip>
	                            <ToolTip Style="{StaticResource HUDBaseAutoTo
									oltipStyle}" />
						</TextBlock.ToolTip>
					</TextBlock>
					
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
						<ItemsControl ItemsSource="{Binding [levelStars]}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>  
									<Image Source="{Binding [icon]}" Width="12" Height="12" Margin="2,2,0,0"/>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</StackPanel>

			
				<Grid Width="32" Height="32" Margin="-3,0,0,0" VerticalAlignment="Center">
					<Image Width="32" Height="32"
							Source="pack://application:,,,/WPFGUI;component/images/coat_of_arms/colour_ring.png"
							HorizontalAlignment="Center" VerticalAlignment="Center"/>
					<Image Width="24"
							Source="{Binding [cardTypeIcon]}"
							HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</Grid>
			</StackPanel>	
			
		</DataTemplate>
		
		
		<DataTemplate x:Key="SquadCardBg">
			<Grid Width="{StaticResource SquadCardContentWidth}" Height="{StaticResource SquadCardContentHeight}" >
				<Rectangle Width="{StaticResource SquadCardContentWidth}" Height="{StaticResource SquadCardContentHeight}"
							Fill="{Binding [Color]}"/>
				<Rectangle Width="176" Height="216" HorizontalAlignment="Center" VerticalAlignment="Center"
							Fill="#121822"/>
				
				<!--<Rectangle
							Width="180" Height="220"images\backgrounds\legal_background.png
							Fill="#1c2431"/>-->
				<!--
					<Image.RenderTransform>
						<RotateTransform Angle="90" />	
					</Image.RenderTransform> ClipToBounds="True"
				3840*2160
					-->
				<Border BorderThickness="2">
					<Grid Width="176" Height="216"  HorizontalAlignment="Center" VerticalAlignment="Center" >
					<Canvas Width="441" Height="441" Margin="-112,-112,0,0">
						<Image Source="pack://application:,,,/WPFGUI;component/images/backgrounds/legal_background.png"
							Width="441" Height="248" Opacity="0.65"
							 Canvas.Top="96.5" Canvas.Left="0" >
							<Image.RenderTransform>
								<TransformGroup>
									<RotateTransform Angle="90" CenterX="220" CenterY="124" />	
									<TranslateTransform X="-16" Y="-35" />
								</TransformGroup>
							</Image.RenderTransform>
								
						</Image>	
					</Canvas>
				</Grid>	
				</Border>
				
				
			</Grid>
		</DataTemplate>
		
		
		<DataTemplate x:Key="SquadCardUITemplate">
			<Border BorderBrush="{Binding [Color]}" BorderThickness="3" VerticalAlignment="Top">
				<Grid Height="{StaticResource SquadCardContentHeight}" Width="{StaticResource SquadCardContentWidth}" 
						VerticalAlignment="Top" >
					
					<ContentControl ContentTemplate="{StaticResource SquadCardBg}" Content="{Binding}" VerticalAlignment="Top" />
					<ContentControl ContentTemplate="{StaticResource SquadCardHeader}" Content="{Binding}" VerticalAlignment="Top" />
					
					<!-- 描述栏 -->
					<StackPanel Orientation="Vertical" Width="{StaticResource SquadCardContentWidth}"  
							Visibility="{Binding [showFull], Converter={StaticResource BoolToVis}}"
							HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,55,0,0" >
						<ItemsControl ItemsSource="{Binding [abilityDescs]}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>  
									<StackPanel Orientation="Horizontal" >
										<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock12ptStyle}" Foreground="#77c47e"
										Text="{Binding [value]}" Width="170"
				                		Effect="{StaticResource DropShadow}" TextWrapping="Wrap" TextAlignment="Center"/>	
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						
						
						<TextBlock 
								Style="{StaticResource HUDWhiteBaseTextBlock12ptStyle}"
								Text="{Binding [loc11]}"
								TextWrapping="Wrap"
		                		Effect="{StaticResource DropShadow}" Foreground="#d4af67"

								/>
							
						<ItemsControl ItemsSource="{Binding [productSquadsInfo]}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>  
									<StackPanel Orientation="Horizontal" Margin="0,5,0,0" Height="24">
										<StackPanel Orientation="Horizontal" Width="145">
											<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Foreground="#d4af67"
													VerticalAlignment="Center" 
												Text="{Binding [name]}" MaxWidth="95">
													<TextBlock.ToolTip>
																 <ToolTip MaxWidth="300" Style="{StaticResource FrontEndTooltip}" Background="#90000000"
																		Content="{Binding}" 
																		DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
																			<ToolTip.ContentTemplate>
																				<DataTemplate>
																				  <TextBlock Text="{Binding [name]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" TextWrapping="Wrap"/>	
																					
																		</DataTemplate>
																	</ToolTip.ContentTemplate>
																</ToolTip>	
															</TextBlock.ToolTip>
													</TextBlock>
												<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Foreground="#d4af67"
												Text=" * "
						                		 VerticalAlignment="Center"/>	
												<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Foreground="#d4af67"
												Text="{Binding [count], Converter={StaticResource CastToIntOperator}}" 
						                		 VerticalAlignment="Center"/>		
													
										</StackPanel>
										<Image Source="{Binding [icon]}" Height="24" Width="24" VerticalAlignment="Center"/>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						
					</StackPanel>
					
					<!--单位列表栏-->
					<StackPanel Orientation="Vertical" Width="170" VerticalAlignment="Bottom" Margin="0,0,0,10" HorizontalAlignment="Center">
						<ItemsControl ItemsSource="{Binding [squadsInfo]}">
							<ItemsControl.ItemTemplate>
								<DataTemplate> 
									<StackPanel Orientation="Horizontal"  Width="170" HorizontalAlignment="Center">
										<StackPanel Orientation="Horizontal" Width="145">
											<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" Foreground="#f0f3fa"
												Text="{Binding [name]}"
						                		Effect="{StaticResource DropShadow}" MaxWidth="95">
													<TextBlock.ToolTip>
																 <ToolTip MaxWidth="300" Style="{StaticResource FrontEndTooltip}" Background="#90000000"
																		Content="{Binding}" 
																		DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
																			<ToolTip.ContentTemplate>
																				<DataTemplate>
																				  <TextBlock Text="{Binding [name]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" TextWrapping="Wrap"/>	
																					
																		</DataTemplate>
																	</ToolTip.ContentTemplate>
																</ToolTip>	
															</TextBlock.ToolTip>
													</TextBlock>
												<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Foreground="#f0f3fa"
												Text=" * "
						                		Effect="{StaticResource DropShadow}"/>	
												<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Foreground="#f0f3fa"
												Text="{Binding [count], Converter={StaticResource CastToIntOperator}}" 
						                		Effect="{StaticResource DropShadow}"/>		
													
										</StackPanel>
										<Image Source="{Binding [icon]}" Height="24" Width="24"/>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						
					</StackPanel>	
						
				</Grid>	
				
			</Border>
		</DataTemplate>
		
		
		<!-- mini单位卡牌，点击的时候切换成大卡牌 -->
		<DataTemplate x:Key="MiniSquadCard" >
			<Button Width="180" Height="220"
				BorderThickness="0"
				ToolTipService.InitialShowDelay="0"
    			ToolTipService.ShowDuration="86400000"
				ToolTipService.ShowOnDisabled="True"
				Style="{StaticResource CardButtonStyle}" 
				Command="{Binding [miniClickCmd]}"
				CommandParameter="{Binding [miniClickCmdParam]}"
				IsEnabled="{Binding [enableMiniCardBtn]}"
				esControls:ButtonHelper.CommandParameter="{Binding [changeSpawnPosCmdParam]}"
				esControls:ButtonHelper.RightClickCommand="{Binding [changeSpawnPosCmd]}"
				>
				
				<Button.Content>
					<Border  BorderBrush="{Binding [Color]}" Style="{StaticResource TavernCardBorder}"
					VerticalAlignment="Top" BorderThickness="0">
					<ContentControl ContentTemplate="{StaticResource SquadCardUITemplate}" Content="{Binding}"/>
					</Border>
				</Button.Content>
				<Button.ToolTip>
					 <ToolTip MaxWidth="300" Style="{StaticResource FrontEndTooltip}" Background="#90000000"
							Content="{Binding}" 
							DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
								<ToolTip.ContentTemplate>
									<DataTemplate>
									  <TextBlock Text="{Binding [loc46]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" TextWrapping="Wrap"/>	
										
							</DataTemplate>
						</ToolTip.ContentTemplate>
					</ToolTip>
				</Button.ToolTip>
			</Button>	
		</DataTemplate>
		
		
		
		<!-- 单位卡牌 -->
		<DataTemplate x:Key="SquadCard">
			<Border Margin="2,0,2,0" BorderBrush="{Binding [Color]}" BorderThickness="0" 
					VerticalAlignment="Top" Style="{StaticResource TavernCardBorder}">
				
				<Border.ToolTip>
					 <ToolTip Width="250" Style="{StaticResource FrontEndTooltip}" Background="#90000000"
							Content="{Binding}" Name="AbilitiesUI" 
							DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
								<ToolTip.ContentTemplate>
									<DataTemplate>
										<ItemsControl ItemsSource="{Binding [abilitiesDescList]}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.ItemTemplate>
												<DataTemplate>  
													<Border Margin="2,2,2,0" BorderThickness="1" BorderBrush="LightGreen" CornerRadius="3" Width="220">
														<StackPanel Width="220">
															<TextBlock Text="{Binding [name]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" Foreground="LightGreen"/>	
															<TextBlock Text="{Binding [desc]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" TextWrapping="Wrap"/>	
														</StackPanel>
													</Border>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
										
							</DataTemplate>
						</ToolTip.ContentTemplate>
					</ToolTip>
				</Border.ToolTip>
				
				<Grid Width="180" Height="260">
					<ContentControl ContentTemplate="{StaticResource SquadCardUITemplate}" Content="{Binding}"/>
					
					<!-- 按钮栏 -->

					<Grid VerticalAlignment="Bottom" Height="40" HorizontalAlignment="Center">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						
						<Button Name="buyBtn" Grid.Column="0"  
								IsEnabled="{Binding [enableBuyBtn]}"
								Command="{Binding [buyCmd]}"
								CommandParameter="{Binding [buyCmdParam]}"
								Content="{Binding [loc12]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}"
								Height="40" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
									<ToolTip.ContentTemplate >
										<DataTemplate>
									<TextBlock Text="{Binding [loc13]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" 
													
													/>	
									</DataTemplate>
										</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>
						
						<!--{Binding [loc14]}-->
						<Button Name="tempAreaBtn" Grid.Column="1" 
								IsEnabled="{Binding [enableTempAreaBtn]}"
								Command="{Binding [tempBuyCmd]}"
								CommandParameter="{Binding [tempBuyCmdParam]}"
								Content="{Binding [loc14]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}"
								Height="40" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
									<ToolTip.ContentTemplate>
										<DataTemplate>
										<TextBlock Text="{Binding [loc15]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />
											</DataTemplate>
										</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip> 
						</Button>
						
						<Button Name="upgradeBtn" Grid.Column="0" 
								IsEnabled="{Binding [enableUpgradeBtn]}"
								Command="{Binding [upgradeCmd]}"
								CommandParameter="{Binding [upgradeCmdParam]}"
								Content="{Binding [loc16]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}" 
								Height="40" FontSize="14" Width="50">
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
									<ToolTip.ContentTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding [loc17]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"  />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>	
						
						<Button Name="tripleBtn" Grid.Column="1"
								IsEnabled="{Binding [enableTripleBuyBtn]}"
								Command="{Binding [tripleBuyCmd]}"
								CommandParameter="{Binding [tripleBuyCmdParam]}"
								Content="{Binding [loc18]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}"
								Height="40" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
									<ToolTip.ContentTemplate>
										<DataTemplate>
										<TextBlock Text="{Binding [loc19]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
											</DataTemplate>
										</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>
						
						<Button Name="enterBtn" Grid.Column="1"
								IsEnabled="{Binding [enableEnterBtn]}"
								Command="{Binding [enterCmd]}"
								CommandParameter="{Binding [enterCmdParam]}"
								Content="{Binding [loc20]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}"
								Height="40" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
									<ToolTip.ContentTemplate>
										<DataTemplate>
										<TextBlock Text="{Binding [loc21]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
											</DataTemplate>
										</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>
						
						<Button Name="sellBtn" Grid.Column="1" 
								Command="{Binding [sellCmd]}"
								CommandParameter="{Binding [sellCmdParam]}"
								Content="{Binding [loc22]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource TavernNewBtn}"
								Height="40" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
									<ToolTip.ContentTemplate>
										<DataTemplate>
										<TextBlock Text="{Binding [loc23]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />
											</DataTemplate>
										</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>
					</Grid>	
				</Grid>
			</Border>
			
			<DataTemplate.Triggers>

				<DataTrigger Binding="{Binding [abilitiesDescListShow]}" Value="true" >
					<Setter TargetName="AbilitiesUI" Property="Visibility" Value="Visible" />
				</DataTrigger>
				<DataTrigger Binding="{Binding [abilitiesDescListShow]}" Value="false" >
					<Setter TargetName="AbilitiesUI" Property="Visibility" Value="Hidden" />
				</DataTrigger>
				<!-- 卡牌可以三连，但是需要购买 -->
				<DataTrigger Binding="{Binding [cardState]}" Value="tripleBuy" >
					<Setter TargetName="tempAreaBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="tempAreaBtn" Property="Grid.Column" Value="1" />
					<Setter TargetName="tripleBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="tripleBtn" Property="Grid.Column" Value="0" />
					<Setter TargetName="buyBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="upgradeBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="sellBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="enterBtn" Property="Visibility" Value="Hidden" />
				</DataTrigger>
				
				<!-- 卡牌可以购买或加入暂存区 -->
				<DataTrigger Binding="{Binding [cardState]}" Value="buy" >
					<Setter TargetName="buyBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="buyBtn" Property="Grid.Column" Value="0" />
					<Setter TargetName="tempAreaBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="tempAreaBtn" Property="Grid.Column" Value="1" />
					<Setter TargetName="tripleBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="upgradeBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="sellBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="enterBtn" Property="Visibility" Value="Hidden" />
				</DataTrigger>
				
				<!-- 卡牌可以升级或出售 -->
				<DataTrigger Binding="{Binding [cardState]}" Value="upgrade" >
					<Setter TargetName="upgradeBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="upgradeBtn" Property="Grid.Column" Value="0" />
					<Setter TargetName="sellBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="sellBtn" Property="Grid.Column" Value="1" />
					<Setter TargetName="buyBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="tripleBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="tempAreaBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="enterBtn" Property="Visibility" Value="Hidden" />
				</DataTrigger>
				
				<!-- 卡牌可以出售或者进场 -->
				<DataTrigger Binding="{Binding [cardState]}" Value="enter" >
					<Setter TargetName="enterBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="enterBtn" Property="Grid.Column" Value="0" />
					<Setter TargetName="sellBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="sellBtn" Property="Grid.Column" Value="1" />
					<Setter TargetName="buyBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="tripleBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="tempAreaBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="upgradeBtn" Property="Visibility" Value="Hidden" />
				</DataTrigger>
				
				<!-- 暂存区卡牌可以三连或出售 -->
				<DataTrigger Binding="{Binding [cardState]}" Value="tempAreaTripleBuy" >
					<Setter TargetName="tripleBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="tripleBtn" Property="Grid.Column" Value="0" />
					<Setter TargetName="sellBtn" Property="Visibility" Value="Visible" />
					<Setter TargetName="sellBtn" Property="Grid.Column" Value="1" />
					<Setter TargetName="buyBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="upgradeBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="tempAreaBtn" Property="Visibility" Value="Hidden" />
					<Setter TargetName="enterBtn" Property="Visibility" Value="Hidden" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		
		
		<DataTemplate x:Key="EmptySquadCard">
			<Border Margin="2,2,2,0" BorderThickness="2" BorderBrush="#754227" 
					VerticalAlignment="Top" Style="{StaticResource TavernCardBorder}" >
				<Grid Width="180" Height="220">
					<TextBlock Text="{Binding [index], Converter={StaticResource CastToIntOperator}}" 
							Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}" Foreground="#FFDB88" FontSize="26"
						VerticalAlignment="Center" 
							HorizontalAlignment="Center"
						/>	
				</Grid>
			</Border>
		</DataTemplate>
		
		
		
		<DataTemplate x:Key="InsertSquadCard">
			<Border Margin="2,2,2,0" BorderThickness="2" BorderBrush="#754227"  Style="{StaticResource TavernCardBorder}" 
					VerticalAlignment="Top">
				<Grid Width="180" Height="180">
					<Button Content="insert" Width="50" Height="30" Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}"
							HorizontalAlignment="Center" VerticalAlignment="Center">
					</Button>	
				</Grid>
			</Border>
		</DataTemplate>
		

		<DataTemplate x:Key="myToBeSelectSquadCards">
			<ItemsControl ItemsSource="{Binding [toBeSelectSquadCards]}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<ContentControl Content="{Binding [card]}" ContentTemplate="{StaticResource SquadCard}" HorizontalAlignment="Left" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		
		<DataTemplate x:Key="mySquadCard">
			<Grid Width="190" MaxHeight="255">
				<ContentControl ContentTemplate="{StaticResource MiniSquadCard}" Name="minSquadCard"
								VerticalAlignment="Bottom"
								Content="{Binding [card]}" HorizontalAlignment="Center" />
				<ContentControl ContentTemplate="{StaticResource SquadCard}" Name="squadCard"
								VerticalAlignment="Bottom"
								Content="{Binding [card]}" HorizontalAlignment="Center"  />
				<ContentControl ContentTemplate="{StaticResource EmptySquadCard}" Name="EmptySquadCard"
								VerticalAlignment="Bottom" Width="180" Height="220"
								Content="{Binding}" />
				<ContentControl ContentTemplate="{StaticResource InsertSquadCard}" Name="insertSquadCard"
								VerticalAlignment="Bottom" Width="180" Height="220"
								Content="{Binding}" />

			</Grid>
			<DataTemplate.Triggers>
					 <!-- 迷你单位卡牌可见 -->
					 <DataTrigger Binding="{Binding [showType]}" Value="miniSquadCard">
						<Setter TargetName="minSquadCard" Property="Visibility" Value="Visible"/>	
						<Setter TargetName="EmptySquadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="squadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="insertSquadCard" Property="Visibility" Value="Hidden"/>
					 </DataTrigger>
					<!-- 大单位卡牌可见 -->
					 <DataTrigger Binding="{Binding [showType]}" Value="squadCard">
						<Setter TargetName="minSquadCard" Property="Visibility" Value="Hidden"/>	
						<Setter TargetName="EmptySquadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="squadCard" Property="Visibility" Value="Visible"/>
						<Setter TargetName="insertSquadCard" Property="Visibility" Value="Hidden"/>
					 </DataTrigger>
					 <!-- 插入模式可见 -->
					 <DataTrigger Binding="{Binding [showType]}" Value="insert">
						<Setter TargetName="minSquadCard" Property="Visibility" Value="Hidden"/>	
						<Setter TargetName="EmptySquadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="squadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="insertSquadCard" Property="Visibility" Value="Visible"/>
					 </DataTrigger>
					 <!-- 空白卡牌可见 -->
					<DataTrigger Binding="{Binding [showType]}" Value="empty">
						<Setter TargetName="minSquadCard" Property="Visibility" Value="Hidden"/>	
						<Setter TargetName="EmptySquadCard" Property="Visibility" Value="Visible"/>
						<Setter TargetName="squadCard" Property="Visibility" Value="Hidden"/>
						<Setter TargetName="insertSquadCard" Property="Visibility" Value="Hidden"/>
					 </DataTrigger>
				</DataTemplate.Triggers>
		</DataTemplate>
		
		<DataTemplate x:Key="mySquadCards">
			<ItemsControl ItemsSource="{Binding [squadCards]}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<ContentControl Content="{Binding}" ContentTemplate="{StaticResource mySquadCard}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		

		
		
		<!-- 能力卡牌 -->
		<DataTemplate x:Key="AbilityCard">
			<Button Width="180" Height="220"
					Command="{Binding [buyAbilityCardCmd]}"
					CommandParameter="{Binding [buyAbilityCardCmdParam]}"
					Style="{StaticResource CardButtonStyle}" 
					>
				<Button.Content>
					<Border Margin="2,2,2,0" BorderBrush="#2C7A66" Style="{StaticResource TavernCardBorder}" 
					VerticalAlignment="Top">
						<Grid Width="180" Height="220" > 
							<Rectangle
									Width="180" Height="220"
									Fill="{StaticResource ResearchButtonBgBrush}" Opacity="{StaticResource CardOpacity}" />
					
							<Rectangle
									Width="180" Height="220"
									Fill="{StaticResource ResearchLightButtonBgHighlightBrush}" Opacity="{StaticResource CardOpacity}" />
		
							<!-- 顶栏 -->
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" >
								<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock16ptStyle}" Text="{Binding [name]}" TextTrimming="CharacterEllipsis" 
										Foreground="LightSkyBlue"
										Width="100" VerticalAlignment="Center">
										<TextBlock.ToolTip>
		                                    <ToolTip Style="{StaticResource HUDBaseAutoTooltipStyle}" />
		                                </TextBlock.ToolTip>
								</TextBlock>
								
							</StackPanel>
							
							<!-- 描述栏 -->
							<StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,26,0,0">
		
								<TextBlock 
										Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}"
										Text="{Binding [desc]}"
										TextWrapping="Wrap"
										Width="172"
				                		Effect="{StaticResource DropShadow}"
										/>
							</StackPanel>
							
						</Grid>
					</Border>
				</Button.Content>	
			</Button>
			
			<DataTemplate.Triggers>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		
		
		<DataTemplate x:Key="abilityCards">
			<ItemsControl ItemsSource="{Binding [toBeSelectAbilityCards]}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<ContentControl Content="{Binding}" ContentTemplate="{StaticResource AbilityCard}" HorizontalAlignment="Left" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="abilityCardsBtns">
			<Button 
						Margin="2,2,2,2"
						Command="{Binding [refreshAbilityCardsCmd]}"
						Content="{Binding [loc24]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50"
						IsEnabled="{Binding [enableRefreshAbilityCardsBtn]}"
						>
					<Button.ToolTip>
						<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
						<ToolTip.ContentTemplate>
										<DataTemplate>
							<TextBlock Text="{Binding [loc25]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
								</DataTemplate>
							</ToolTip.ContentTemplate>
						</ToolTip>
					</Button.ToolTip>
				</Button>
				
				<Button 
						Margin="2,2,2,2"
						Command="{Binding [cancelBuyAbilityCardCmd]}"
						Content="{Binding [loc26]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50" >
					<Button.ToolTip>
						<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
						<ToolTip.ContentTemplate>
										<DataTemplate>
							<TextBlock Text="{Binding [loc27]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
								</DataTemplate>
							</ToolTip.ContentTemplate>
						</ToolTip>
					</Button.ToolTip>
				</Button>	
		</DataTemplate>
		
		<!-- 按钮区域 -->
		<DataTemplate x:Key="ControlPanel">
			<StackPanel Orientation="Vertical" >
				<!-- 倒计时 -->
				<Grid Width="200" Height="20">
					<Rectangle Fill="Black" Opacity="0.6"  Width="200" Height="20"/>
                    <TextBlock 
                               Style="{StaticResource nHUDBaseTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding [countdown]}" />	
				</Grid>
				
				<Grid Width="200" Height="28">
					<Rectangle Fill="Black" Opacity="0.6"  Width="200" Height="28"/>
					<Image Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_food_icon.png" Width="28" Height="28" 
							HorizontalAlignment="Left" />
                    <TextBlock 
                               Style="{StaticResource nHUDBaseTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding [food], Converter={StaticResource CastToIntOperator}}" FontSize="16"
								Foreground="DeepSkyBlue"
							/>	
				</Grid>
				
				<Grid Width="200" Height="28">
					<Rectangle Fill="Black" Opacity="0.6"  Width="200" Height="28"/>
					<Image Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_gold_icon.png" Width="28" Height="28" 
							HorizontalAlignment="Left" />
                    <TextBlock 
                               Style="{StaticResource nHUDBaseTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding [gold], Converter={StaticResource CastToIntOperator}}" FontSize="16"
								Foreground="Gold"
							/>	
				</Grid>
				
				<!--
				<StackPanel Opacity="Horizontal" Width="100" Height="20">
					
					<TextBlock Text="{Binding [countdown]}" Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}" Margin="5,5,5,5"
							HorizontalAlignment="Center"/>
				</StackPanel>-->
				
				<StackPanel Orientation="Horizontal">
					<Button 
					Margin="2,2,2,2"
					Command="{Binding [ExecuteRoleAbilityCmd]}"
					IsEnabled="False"
					Visibility="{Binding [showRoleAbilityBtn], Converter={StaticResource BoolToVis}}" 
					Content="{Binding [loc28]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
					Height="30" FontSize="14" Width="50" >
					<Button.ToolTip>
						<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
								<ToolTip.ContentTemplate>
										<DataTemplate>
							<TextBlock Text="{Binding [loc29]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
						</ToolTip>
					</Button.ToolTip>
				</Button>	
				</StackPanel>
				
				<StackPanel Orientation="Horizontal">
						
					<Button 
							IsEnabled="{Binding [enableReadyBtn]}"
						Margin="2,2,2,2"
						Command="{Binding [ReadyCmd]}"
						Content="{Binding [loc30]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50" >
						<Button.ToolTip>
							<ToolTip Style="{StaticResource FrontEndTooltip}" 
									Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
									>
								<ToolTip.ContentTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding [loc31]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
							</ToolTip>
							</Button.ToolTip>
						</Button>
					
					<!-- 已准备玩家数量 -->
					<StackPanel Orientation="Horizontal" Margin="2,2,2,2">
						<TextBlock 
							Text="{Binding [readyPlayerCount], Converter={StaticResource CastToIntOperator}}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
						<TextBlock Text="/" Foreground="MediumVioletRed" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />
						<TextBlock Text="{Binding [alivePlayerCount], Converter={StaticResource CastToIntOperator}}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
					</StackPanel>
				</StackPanel>

				
				<StackPanel Orientation="Horizontal">
					<Button 
						IsEnabled="{Binding [enableLevelupBtn]}"
						Margin="2,2,2,2"
						Command="{Binding [LevelupCmd]}"
						Content="{Binding [loc35]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50" >
						<Button.ToolTip>
							<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
								<ToolTip.ContentTemplate>
										<DataTemplate>
								<TextBlock Text="{Binding [loc36]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
							</ToolTip>
							</Button.ToolTip>
						</Button>
					
					<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
						<TextBlock  Text="Lvl." Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
						<TextBlock 
							Text="{Binding [level], Converter={StaticResource CastToIntOperator}}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
						
						<TextBlock  Text="  " Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
						<Image Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_food_icon.png" Width="18" Height="18" />
						<TextBlock Text="{Binding [levelupCost] , Converter={StaticResource CastToIntOperator}}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>
					</StackPanel>
						
				</StackPanel>
			</StackPanel>
		</DataTemplate>
		
		
		
		<!-- 能力卡牌 -->
		<DataTemplate x:Key="AbilityCardTripleBuyBtn">
			<Button Width="180" Height="220"
					Command="{Binding [tripleBuyCmd]}"
					CommandParameter="{Binding [tripleBuyCmdParam]}"
					Style="{StaticResource CardButtonStyle}"
					>
				<Button.Content>
					<Border Margin="2,2,2,0" BorderBrush="#2C7A66"
					VerticalAlignment="Top" Style="{StaticResource TavernCardBorder}" >
						<Grid Width="180" Height="220" > 
							<Rectangle
									Width="180" Height="220"
									Fill="{StaticResource ResearchButtonBgBrush}" Opacity="{StaticResource CardOpacity}" />
					
							<Rectangle
									Width="180" Height="220"
									Fill="{StaticResource ResearchLightButtonBgHighlightBrush}" Opacity="{StaticResource CardOpacity}" />
		
							<!-- 顶栏 -->
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" >
								<TextBlock Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" Text="{Binding [name]}" TextTrimming="CharacterEllipsis" 
										Width="100" VerticalAlignment="Center" Foreground="AliceBlue">
										<TextBlock.ToolTip>
		                                    <ToolTip Style="{StaticResource HUDBaseAutoTooltipStyle}" />
		                                </TextBlock.ToolTip>
								</TextBlock>
								
							</StackPanel>
							
							<!-- 描述栏 -->
							<StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,26,0,0">
		
								<TextBlock 
										Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}"
										Text="{Binding [desc]}"
										TextWrapping="Wrap"
				                		Effect="{StaticResource DropShadow}"
										Width="172"
										/>
							</StackPanel>
							
						</Grid>
					</Border>
				</Button.Content>	
			</Button>
			
			<DataTemplate.Triggers>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		
		
		<!-- 单位卡牌 -->
		<DataTemplate x:Key="SquadCardTripleBuyBtn">
			<Button Width="180" Height="220" BorderThickness="0" 
					IsEnabled="{Binding [canSelected]}"
					Command="{Binding [tripleBuyCmd]}"
					CommandParameter="{Binding [tripleBuyCmdParam]}"
					Style="{StaticResource CardButtonStyle}"
					>
				<Button.Content>
					<Border BorderBrush="{Binding [Color]}" BorderThickness="0"
							VerticalAlignment="Top" Style="{StaticResource TavernCardBorder}" >
						<!--
						<Border.ToolTip>
							 <ToolTip MaxWidth="300" Style="{StaticResource FrontEndTooltip}" Background="#90000000">
								<StackPanel Orientation="Vertical">
									<Border Margin="2,2,2,0" BorderThickness="2" BorderBrush="#FFDB88">
										<StackPanel>
											<TextBlock Text="文本1" Foreground="#FFDB88"/>	
											<TextBlock Text="文本22222" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>	
										</StackPanel>
									</Border>
									<Border Margin="2,2,2,0" BorderThickness="2" BorderBrush="#FFDB88">
										<StackPanel>
											<TextBlock Text="文本1" Foreground="#FFDB88"/>	
											<TextBlock Text="文本22222" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"/>	
										</StackPanel>
									</Border>
								</StackPanel>
							</ToolTip>
						</Border.ToolTip>
						-->
						<Grid Width="180" Height="220"> 
							<ContentControl ContentTemplate="{StaticResource SquadCardUITemplate}" Content="{Binding}"/>
						</Grid>
					</Border>
				</Button.Content>
			</Button>
			<DataTemplate.Triggers>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		
		<!-- 三连卡牌 -->
		<DataTemplate x:Key="TripleBuyCard">
			<Grid Width="185">
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource AbilityCardTripleBuyBtn}" HorizontalAlignment="Center" Name="TripleAbilityCard" Visibility="Hidden" /> 
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource SquadCardTripleBuyBtn}" HorizontalAlignment="Center" Name="TripleSquadCard" Visibility="Hidden"/>
			</Grid>
			
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding [tripleBuyCardType]}" Value="SQUAD">
					<Setter TargetName="TripleSquadCard" Property="Visibility" Value="Visible"/>	
					<Setter TargetName="TripleAbilityCard" Property="Visibility" Value="Hidden"/>	
				 </DataTrigger>
				<DataTrigger Binding="{Binding [tripleBuyCardType]}" Value="ABILITY">
					<Setter TargetName="TripleSquadCard" Property="Visibility" Value="Hidden"/>	
					<Setter TargetName="TripleAbilityCard" Property="Visibility" Value="Visible"/>	
				 </DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		<DataTemplate x:Key="TripleBuyCards">
			<ItemsControl ItemsSource="{Binding [toBeSelectTripleBuyCards]}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<ContentControl Content="{Binding}" ContentTemplate="{StaticResource TripleBuyCard}" HorizontalAlignment="Left" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="TempAreaSquadCards" >
			<ItemsControl ItemsSource="{Binding [tempAreaSquadCards]}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Vertical" HorizontalAlignment="Left" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate >
						<ContentControl Content="{Binding}" ContentTemplate="{StaticResource mySquadCard}" HorizontalAlignment="Left" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="Grounds" >
			<ItemsControl ItemsSource="{Binding}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>  
						<Button Margin="5,0,5,0" Content="{Binding [btnTxt]}" Width="200" Height="50" Style="{StaticResource HUDPrimaryRaisedTextButton}"
								IsEnabled="{Binding [enabled]}" FontSize="14" 
								Command="{Binding [cmd]}"  HorizontalAlignment="Center"
								CommandParameter="{Binding [cmdParam]}" />
						
						
						
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
	</Grid.Resources>

	<!-- Width="1920" Height="1080" -->
	<Grid Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}">
		<Grid.RowDefinitions>
		<RowDefinition Height="150" />	
		<RowDefinition Height="300" />	
		<RowDefinition Height="100" />	
		</Grid.RowDefinitions>	
		<StackPanel Grid.Row="0" HorizontalAlignment="Center">
			<ContentControl Content="{Binding}" ContentTemplate="{StaticResource HallRoles}" HorizontalAlignment="Center" />
		</StackPanel>
	
		<!-- 待选单位卡牌区域 -->
		<StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
			<ContentControl Content="{Binding}" ContentTemplate="{StaticResource myToBeSelectSquadCards}" HorizontalAlignment="Center" />
		</StackPanel>
		
		<StackPanel Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
			<StackPanel Orientation="Horizontal">
						<Button IsEnabled="{Binding [enableRefreshBtn]}"
						Margin="2,2,2,2"
						Command="{Binding [SquadCardRefreshCmd]}"
						Content="{Binding [loc32]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50" >
						<Button.ToolTip>
							<ToolTip Style="{StaticResource FrontEndTooltip}"
									Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
								<ToolTip.ContentTemplate>
										<DataTemplate>
								<TextBlock Text="{Binding [loc33]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
							</ToolTip>
							</Button.ToolTip>
						</Button>
					<Button 
						Margin="2,2,2,2"
						Command="{Binding [ToggleLockCmd]}"
						Content="{Binding [lockBtnText]}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource HUDPrimaryRaisedTextButton}"
						Height="30" FontSize="14" Width="50" >
							<Button.ToolTip>
								<ToolTip Style="{StaticResource FrontEndTooltip}" Content="{Binding}" 
									 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
								<ToolTip.ContentTemplate>
										<DataTemplate>
									<TextBlock Text="{Binding [loc34]}" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />	
										</DataTemplate>
									</ToolTip.ContentTemplate>
								</ToolTip>
							</Button.ToolTip>
						</Button>
						
				</StackPanel>
		</StackPanel>
	</Grid>
	
	<!-- 已选单位卡牌区域 -->
	<StackPanel HorizontalAlignment="Center" Margin="0,2,0,0" VerticalAlignment="Bottom" Orientation="Horizontal">
		<ContentControl Content="{Binding}" ContentTemplate="{StaticResource ControlPanel}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
		<ContentControl Content="{Binding}" ContentTemplate="{StaticResource mySquadCards}" HorizontalAlignment="Center" />
	</StackPanel>
	
	<!-- 暂存区 -->
	<Grid VerticalAlignment="Center" HorizontalAlignment="Left">
		<ContentControl Content="{Binding}" ContentTemplate="{StaticResource TempAreaSquadCards}"/>
	</Grid>

	<Grid Visibility="{Binding [showAbilityCards], Converter={StaticResource BoolToVis}}">
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgBrush}" Opacity="0.8" />
			
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgHighlightBrush}" Opacity="0.8" />
		<StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center"  >
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="50">
				<TextBlock Text="{Binding [loc38]}" HorizontalAlignment="Center" Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}" Foreground="LightSkyBlue"/>
			</StackPanel>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="300">
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource abilityCards}" HorizontalAlignment="Center" />
			</StackPanel>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="100">
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource abilityCardsBtns}" HorizontalAlignment="Center" />
			</StackPanel>
		</StackPanel>	
	</Grid>
	
	
	
	<!-- 三连 -->
	<Grid Visibility="{Binding [showTripleBuy], Converter={StaticResource BoolToVis}}">
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgBrush}" Opacity="0.8" />
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgHighlightBrush}" Opacity="0.8" />
		<!--
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgBrush}" Opacity="0.8" />
			
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgHighlightBrush}" Opacity="0.8" />
		-->
		<StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center"  >
			
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="50">
				<TextBlock Text="{Binding [loc39]}" HorizontalAlignment="Center" Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}" Foreground="LightSkyBlue"/>
			</StackPanel>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="300">
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource TripleBuyCards}" HorizontalAlignment="Center" />
			</StackPanel>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="50">
				<TextBlock Text="{Binding [loc40]}" HorizontalAlignment="Center" Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}" />
			</StackPanel>
		</StackPanel>	
	</Grid>
	
	<Grid Visibility="{Binding [showChangeSpawnPosUI], Converter={StaticResource BoolToVis}}">
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgBrush}" Opacity="0.8" />
		<Rectangle 
				Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
				Fill="{StaticResource AbilityButtonBgHighlightBrush}" Opacity="0.8" />
		
		<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical">

			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="50">
				<TextBlock Text="{Binding [loc43]}" HorizontalAlignment="Center" Style="{StaticResource HUDWhiteBaseTextBlock18ptStyle}" Foreground="LightSkyBlue"/>
			</StackPanel>
			<StackPanel Height="100" >
				<ContentControl Content="{Binding [spawnPosList][layer2]}" ContentTemplate="{StaticResource Grounds}"
						VerticalAlignment="Center"
						HorizontalAlignment="Center" />
			</StackPanel>
			<StackPanel Height="80" >
				<ContentControl Content="{Binding [spawnPosList][layer1]}" ContentTemplate="{StaticResource Grounds}" HorizontalAlignment="Center" />
			</StackPanel>
			
			<StackPanel Height="50" >
				<Button  Content="{Binding [loc45]}" Width="100" Height="30" Style="{StaticResource HUDPrimaryRaisedTextButton}"
								IsEnabled="{Binding [enabled]}" FontSize="14" 
								Command="{Binding [closeChangeSpawnPosUI]}"  HorizontalAlignment="Center" VerticalAlignment="Center"/>	
			</StackPanel>
		</StackPanel>
		
	</Grid>
	
</Grid>

]]


Core_RegisterModule("HallUI")

local _hall_ui_data = {
	name = "hall_ui",
	context = {
		show = false,
		screenHeight = 1080,
		players = {},
		enableReadyBtn = true,
		lockBtnIsLocked = false,
		
		enableRefreshBtn = true,
		enableLevelupBtn = true,
		showRoleAbilityBtn = true,
		toBeSelectSquadCards = {},
		lockBtnText = Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:41"),
		squadCards = {},
		-- 当前选择的单位卡牌id
		currentSelectedSquadCardIdx = nil,
		currentSelectedTempAreaSquadCardIdx = nil,
		showAbilityCards = false,
		cancelBuyAbilityCardCmd = UI_CreateCommand("HallUI_CancelUpgradeSquadCard"),
		refreshAbilityCardsCmd = UI_CreateCommand("HallUI_RefreshAbilityCards"),
		enableRefreshAbilityCardsBtn = false,
		currentBuySquadCardId = nil,
		toBeSelectAbilityCards = {},
		toBeSelectTripleBuyCards = {},
		
		ToggleLockCmd = UI_CreateCommand("HallUI_ToggleLockBtnCommand"),
		SquadCardRefreshCmd = UI_CreateCommand("HallUI_RefreshCommand"),
		ReadyCmd = UI_CreateCommand("HallUI_ReadyCommand"),
		LevelupCmd = UI_CreateCommand("HallUI_LevelupCommand"),
		readyPlayerCount = 0,
		alivePlayerCount = 0,
		showTripleBuy = false, 
		changeSpawnPosCardIdx = nil,
		showChangeSpawnPosUI = false,
		spawnPosList = {},
		gold = 0,
		food = 0,
		closeChangeSpawnPosUI = UI_CreateCommand("HallUI_CloseSpawnPosUI")
	},
	
}

function HallUI_SetShowChangeSpawnPosUI(flag) 
	_hall_ui_data.context.showChangeSpawnPosUI = flag
end

function HallUI_GetShowChangeSpawnPosUI() 
	return _hall_ui_data.context.showChangeSpawnPosUI
end

function HallUI_SetChangeSpawnPosCardIdx(idx)
	_hall_ui_data.context.changeSpawnPosCardIdx = idx
end

function HallUI_GetChangeSpawnPosCardIdx(idx)
	return _hall_ui_data.context.changeSpawnPosCardIdx
end

function HallUI_SetCountDown(sec)
	--print("----------HallUI_SetCountDown--------")
	_hall_ui_data.context.countdown = string.format("ROUND %s  %s", ConfigUtil_GetCurrentRound(), Util_FormatSecs(sec))
	--print("_hall_ui_data.context.countdown")
end

function HallUI_SetReadyPlayerCount(count)
	_hall_ui_data.context.readyPlayerCount = count
end

function HallUI_SetShowTripleBuy(flag) 
	_hall_ui_data.context.showTripleBuy = flag
end

function HallUI_SetAlivePlayerCount(count)
	_hall_ui_data.context.alivePlayerCount = count
end

function HallUI_SetLockBtnIsLocked(flag)
	_hall_ui_data.context.lockBtnIsLocked = flag
end

function HallUI_SetEnableLevelupBtn(flag) 
	_hall_ui_data.context.enableLevelupBtn = flag
end

function HallUI_SetLockBtnText(text)
	_hall_ui_data.context.lockBtnText = text
end

function HallUI_GetLockBtnIsLocked()
	return _hall_ui_data.context.lockBtnIsLocked
end

function HallUI_SetEnableReadyBtn(flag)
	_hall_ui_data.context.enableReadyBtn = flag
end

function HallUI_SetLevel(level)
	_hall_ui_data.context.level = level
end

function HallUI_SetLevelupCost(levelupCost)
	_hall_ui_data.context.levelupCost = levelupCost
end

function HallUI_SetEnableRefreshBtn(flag)
	_hall_ui_data.context.enableRefreshBtn = flag
end

function HallUI_SetShowRoleAbilityBtn(flag)
	_hall_ui_data.context.showRoleAbilityBtn = flag
end

function HallUI_SetEnableLevelupBtn(flag)
	_hall_ui_data.context.enableLevelupBtn = flag
end

function HallUI_SetCurrentBuySquadCardId(cardId)
	_hall_ui_data.context.currentBuySquadCardId = cardId
end

function HallUI_GetCurrentBuySquadCardId()
	return _hall_ui_data.context.currentBuySquadCardId
end

-- 是否显示能力卡牌
function HallUI_IsShowAbilityCards()
	return _hall_ui_data.context.showAbilityCards
end

function HallUI_SetShowAbilityCards(flag)
	_hall_ui_data.context.showAbilityCards = flag
end

-- 是否启用刷新能力卡牌的按钮
function HallUI_SetEnableRefreshAbilityCardsBtn(flag)
	_hall_ui_data.context.enableRefreshAbilityCardsBtn = flag
end


function HallUI_GetCurrentSelectedSquadCardIdx()
	return _hall_ui_data.context.currentSelectedSquadCardIdx
end

function HallUI_GetCurrentSelectedTempAreaSquadCardIdx()
	return _hall_ui_data.context.currentSelectedTempAreaSquadCardIdx
end

function HallUI_SetCurrentSelectedSquadCardIdx(squadCardIdx)
	_hall_ui_data.context.currentSelectedSquadCardIdx = squadCardIdx
end

function HallUI_SetCurrentSelectedTempAreaSquadCardIdx(squadCardIdx)
	_hall_ui_data.context.currentSelectedTempAreaSquadCardIdx = squadCardIdx
end

function HallUI_GetContext()
	return _hall_ui_data.context
end

function HallUI_GetPlayers()
	return _hall_ui_data.context.players
end

function HallUI_SetPlayers(players)
	 _hall_ui_data.context.players = players
end

-- 初始化控制面板数据
function HallUI_InitControlPanelOnRoundStart()
	local aliveCount = 0
	for i, player in pairs(PLAYERS) do 
		if Player_IsAlive(player.id) then 
			aliveCount = aliveCount + 1
		end
	end
	HallUI_SetAlivePlayerCount(aliveCount)
	HallUI_SetReadyPlayerCount(0)
	HallUI_SetEnableReadyBtn(true)
	
end

-- 更新控制面板
function HallUI_UpdateControlPanel()
	local refreshBtn = PlayerMgr_GetFood(localPlayer.id) > 0
	HallUI_SetEnableRefreshBtn(refreshBtn)
	
	local levelupBtn =  PlayerMgr_GetFood(localPlayer.id) >= PlayerMgr_GetLevelupCost(localPlayer.id) and PlayerMgr_GetLevel(localPlayer.id) < 6
	HallUI_SetEnableLevelupBtn(levelupBtn)
	HallUI_SetLevel(PlayerMgr_GetLevel(localPlayer.id))
	HallUI_SetLevelupCost(PlayerMgr_GetLevelupCost(localPlayer.id))
	_hall_ui_data.context.gold = PlayerMgr_GetGold(localPlayer.id)
	_hall_ui_data.context.food = PlayerMgr_GetFood(localPlayer.id)
end

function HallUI_SetToBeSelectSquadCards(playerId)
	_hall_ui_data.context.toBeSelectSquadCards = PlayerCard_GetToBeSelectSquadCards(playerId)
	
	for _, squadCard in pairs( _hall_ui_data.context.toBeSelectSquadCards) do 
		HallUI_BindCmdForSquadCard(squadCard, AREA_TOBESELECT)
		local card = squadCard.card
		local enableBuyBtn =  PlayerMgr_GetFood(playerId) >= ConfigUtil_GetSquadCardPrice() and HallUI_GetCurrentBuySquadCardId() ~= card.cardId
		card.enableTripleBuyBtn = enableBuyBtn
		card.enableBuyBtn = enableBuyBtn and PlayerCard_CheckHadEmptyPosInSquadCards(playerId)
		--print(PlayerCard_CheckHadEmptyPosInTempAreaSquadCards(playerId))
		card.enableTempAreaBtn = PlayerMgr_GetFood(playerId) >= ConfigUtil_GetSquadCardPrice() and PlayerCard_CheckHadEmptyPosInTempAreaSquadCards(playerId)
		card.defaultAbilities = nil
		if PlayerCard_HadSquadCard(playerId, card.cardId) then 
			card.Color = SquadCard_GetHadColor()
		else 
			card.Color = SquadCard_GetNormalColor()
		end
		card.showFull = true 
		card.abilitiesDescListShow = false
		--print("cardId:" .. card.cardId )
		if PlayerCard_IsCanTripleBuy(playerId, SquadCards_GetId(card)) then 
			card.cardState = CARD_STATE_TRIPLEBUY
		else 
			card.cardState = CARD_STATE_BUY
		end
	end
end

function HallUI_SetToBeSelectAbilityCards(playerId)
	 _hall_ui_data.context.toBeSelectAbilityCards = {}
	
	for _, abilityCard in pairs(PlayerCard_GetToBeSelectAbilityCards(playerId)) do 
		local card = {
			buyAbilityCardCmd = UI_CreateCommand("HallUI_BuyAbilityCards"),
			buyAbilityCardCmdParam = abilityCard.cardId,
			name = abilityCard.name,
			desc = abilityCard.desc,
		}
		HallUI_AppendLocStrings(card)
		table.insert( _hall_ui_data.context.toBeSelectAbilityCards, card)

	end
end

function HallUI_BindCmdForSquadCard(squadCard, areaType)
	if squadCard.card == nil then 
		return
	end
	squadCard.card.miniClickCmd = UI_CreateCommand("HallUI_MiniCardClickCommand")
	squadCard.card.miniClickCmdParam = string.format("%s|%s", squadCard.index, areaType) 
	--print("squadCard.card.miniClickCmdParam:" .. squadCard.card.miniClickCmdParam)
	
	squadCard.card.buyCmd = UI_CreateCommand("HallUI_BuySquadCards")
	squadCard.card.buyCmdParam = tostring(squadCard.card.cardId)
	
	squadCard.card.upgradeCmd = UI_CreateCommand("HallUI_UpgradeSquadCard")
	squadCard.card.upgradeCmdParam = tostring(squadCard.index)
	
	squadCard.card.sellCmd = UI_CreateCommand("HallUI_SellSquadCards")
	squadCard.card.sellCmdParam = string.format("%s|%s", squadCard.index, areaType) 
	
	if areaType == AREA_TOBESELECT then 
		squadCard.card.tripleBuyCmd = UI_CreateCommand("HallUI_TripleBuyPre")
		squadCard.card.tripleBuyCmdParam =  tostring(squadCard.card.cardId)
	elseif areaType == AREA_TEMP then 
		squadCard.card.tripleBuyCmd = UI_CreateCommand("HallUI_TripleBuyAtTempAreaPre")
		squadCard.card.tripleBuyCmdParam =  tostring(squadCard.index)
	end
	
	HallUI_AppendLocStrings(squadCard.card)
	--[[
	squadCard.card.tripleBuyCmd = UI_CreateCommand("")
	squadCard.card.tripleBuyCmdParam = squadCard.index
	
	
	
	--]]
	squadCard.card.tempBuyCmd = UI_CreateCommand("HallUI_TempBuySquadCard")
	squadCard.card.tempBuyCmdParam = tostring(squadCard.card.cardId)
	
	squadCard.card.enterCmd = UI_CreateCommand("HallUI_EnterCmd")
	squadCard.card.enterCmdParam = tostring(squadCard.index)
	
	squadCard.card.changeSpawnPosCmd = UI_CreateCommand("HallUI_ChangeSpawnPosCmd")
	squadCard.card.changeSpawnPosCmdParam = string.format("%s|%s", squadCard.index, areaType) 
	
end


-- 添加卡牌到暂存区
function HallUI_TempBuySquadCard(cardId)
	Network_CallEvent("HallUI_TempBuySquadCardNtw", cardId)
end

-- 添加卡牌到暂存区
function HallUI_TempBuySquadCardNtw(playerId, cardId)
	if PlayerCard_CheckToBeSelectSquadCardsHadCardId(playerId, cardId) and PlayerMgr_GetFood(playerId) >= ConfigUtil_GetSquadCardPrice() then 
		Core_CallDelegateFunctions("OnSquadCardBuy", playerId, cardId, AREA_TEMP)
		PlayerCard_DeleteToBeSelectSquadCard(playerId,cardId)
		PlayerCard_AddSquadCardsToTempArea(playerId, cardId)
		--TODO 
		PlayerMgr_AddFood(playerId, -ConfigUtil_GetSquadCardPrice())
	end
end

-- 进场相关
function HallUI_EnterCmd(cardIdx)
	Network_CallEvent("HallUI_EnterCmdNtw", cardIdx)
end

function HallUI_EnterCmdNtw(playerId, cardData)
	local cardIdx = tonumber(cardData)
	if not PlayerCard_CheckTempAreaSquadCardsIdxIsEmpty(playerId, cardIdx) then 
		PlayerCard_AddSquadCardsFromTempArea(playerId, cardIdx)
	end
end

function HallUI_SetSquadCards(playerId)
	_hall_ui_data.context.squadCards = {}
	local player = Core_GetPlayersTableEntry(playerId)
	for _, squadCard in pairs(PlayerCard_GetSquadCards(playerId)) do
		local card = {}
		card = Clone(squadCard)
		HallUI_BindCmdForSquadCard(card, AREA_STANDARD)
		if card.card ~= nil then 
			card.enableMiniCardBtn = not player.isSelectAbCard
			card.card.abilitiesDescList = SquadCards_GetAbilitiesDesc(card.card)
			card.card.abilitiesDescListShow = #card.card.abilitiesDescList > 0
			card.card.abilityCards = nil
			card.card.defaultAbilities = nil
			card.card.enableUpgradeBtn = PlayerMgr_GetGold(playerId) >= ConfigUtil_GetAbilityCardPrice() and SquadCards_CheckCanAddAbility(card.card)
			card.card.showFull = HallUI_GetCurrentSelectedSquadCardIdx() == card.index
		end
		
		table.insert(_hall_ui_data.context.squadCards, card)
	end
end

function HallUI_SetTempAreaSquadCards(playerId)
	_hall_ui_data.context.tempAreaSquadCards = {}
	local player = Core_GetPlayersTableEntry(playerId)
	for _, squadCard in pairs(PlayerCard_GetTempAreaSquadCards(playerId)) do
		local card = {}
		card = Clone(squadCard)
		HallUI_BindCmdForSquadCard(card, AREA_TEMP)
		if card.card ~= nil then 
			card.enableMiniCardBtn = true
			card.card.abilityCards = nil
			card.card.defaultAbilities = nil
			card.card.enableUpgradeBtn = false
			card.card.enableEnterBtn = PlayerCard_CheckHadEmptyPosInSquadCards(playerId)
			card.card.enableTripleBtn = PlayerCard_IsCanTripleBuyAtTempArea(playerId, SquadCards_GetId(card.card))
			if card.card.enableTripleBtn then 
				card.card.cardState = CARD_STATE_TEMPAREA_TRIPLEBUY
			else 
				card.card.cardState = CARD_STATE_ENTER
			end
			card.card.showFull = HallUI_GetCurrentSelectedTempAreaSquadCardIdx() == card.index
		end
		
		table.insert(_hall_ui_data.context.tempAreaSquadCards, card)
	end
end


function HallUI_SetToBeSelectTripleBuyCards(playerId)
	_hall_ui_data.context.toBeSelectTripleBuyCards = {}
	local player = Core_GetPlayersTableEntry(playerId)
	local cards = PlayerCard_GetTobeSelectTripleBuyCards(playerId)
	if cards ~= nil then 
		--print("HallUI_SetToBeSelectTripleBuyCards:" .. #cards)
		for i, oldCard in pairs(PlayerCard_GetTobeSelectTripleBuyCards(playerId)) do
			local card = Clone(oldCard)
			card.tripleBuyCmd = UI_CreateCommand("HallUI_TripleBuy")
			card.tripleBuyCmdParam = tostring(i)
			card.defaultAbilities = nil
			card.showFull = true 
			if card.tripleBuyCardType == CARD_TYPE_SQUAD then 
				--card.canSelected = PlayerCard_CheckHadEmptyPosInSquadCards(playerId)
				HallUI_AppendLocStrings(card)
				table.insert(_hall_ui_data.context.toBeSelectTripleBuyCards, card)
			else 
				local c = {
					tripleBuyCmd = card.tripleBuyCmd,
					tripleBuyCmdParam = card.tripleBuyCmdParam,
					name = card.name,
					desc = card.desc,
					tripleBuyCardType = card.tripleBuyCardType,
				}
				HallUI_AppendLocStrings(c)
				table.insert(_hall_ui_data.context.toBeSelectTripleBuyCards, c)
			end
			
		end
	end
end

function HallUI_OnInit()
	for i, player in pairs(PLAYERS) do 
		
	end
end


function HallUI_Show()
	_hall_ui_data.context.show = true
	HallUI_UpdateUI()
end

function HallUI_Hide()
	_hall_ui_data.context.show = false
	HallUI_UpdateUI()
end


function HallUI_UpdateUI()
	HallUI_UpdateContextData()
	--Util_PrintTable(_hall_ui_data.context.toBeSelectSquadCards)
	UI_SetDataContext(_hall_ui_data.name, _hall_ui_data.context)
end

function HallUI_Start()
	Network_RegisterEvent("HallUI_BuySquadCardsNtw")
	Network_RegisterEvent("HallUI_UpgradeSquadCardNtw")
	Network_RegisterEvent("HallUI_SellSquadCardsNtw")
	Network_RegisterEvent("HallUI_CancelUpgradeSquadCardNtw")
	Network_RegisterEvent("HallUI_BuyAbilityCardsNtw")
	Network_RegisterEvent("HallUI_RefreshAbilityCardsNtw")
	Network_RegisterEvent("HallUI_ReadyCommandNtw")
	Network_RegisterEvent("HallUI_RefreshCommandNtw")
	Network_RegisterEvent("HallUI_ToggleLockBtnCommandNtw")
	Network_RegisterEvent("HallUI_LevelupCommandNtw")
	Network_RegisterEvent("HallUI_TripleBuyNtw")
	Network_RegisterEvent("HallUI_TripleBuyPreNtw")
	Network_RegisterEvent("HallUI_TempBuySquadCardNtw")
	Network_RegisterEvent("HallUI_EnterCmdNtw")
	Network_RegisterEvent("HallUI_TripleBuyAtTempAreaNtw")
	Network_RegisterEvent("HallUI_DoChangeSpawnPosCmdNtw")
	Network_RegisterEvent("HallUI_ChangeSpawnPosCmdNtw")
	
	HallUI_UpdateContextData()
	local xaml = _hall_ui_xaml
	--print("...............locstring.............")
	--print(Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:8"))
	--print(Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:8").LocString)
	if not ConfigUtil_IsEnableMatchUI() then 
		xaml = _hall_ui_normal_xaml
	end 
	UI_AddChild("ScarDefault", "XamlPresenter", _hall_ui_data.name, { IsHitTestVisible = true, Xaml = xaml, DataContext = UI_CreateDataContext(_hall_ui_data.context) })
end

-- 轮次开始时
function HallUI_OnRoundStart()
	UI_SetPropertyValue("selectionCommandCardsGrid", "Visibility", "Hidden")
	UI_SetPropertyValue("Taskbar", "Visibility", "Hidden")
	UI_SetPropertyValue("DynastyUI", "Visibility", "Hidden")
	
	_hall_ui_data.context.show = true
	local context = HallUI_GetContext()
	context.startBtnEnable = true
	refreshBtnEnable = true
	roleAbilityBtn = true
	--HallUI_SetCurrentSelectedSquadCardIdx(nil)
	--HallUI_SetShowAbilityCards(false)
	--HallUI_SetShowTripleBuy(false)
	HallUI_SetShowChangeSpawnPosUI(false)
	
	for i, player in pairs(PLAYERS) do 
		if not PlayerCard_IsLockedCard(player.id) then
			-- 发放单位卡牌
			PlayerCard_SetToBeSelectSquadCards(player.id, SquadCards_RandGetSquadCards(player.id, PlayerMgr_GetRefreshSquadCardsCount(player.id)))
		else 
			if player.id == localPlayer.id then 
				-- 解锁
				HallUI_ToggleLockBtnCommand()
			end
		end
		 
		PlayerCard_ResetSquadCardsShowType(player.id)
		player.start = false
		-- 是否是处于选择能力卡牌中
		player.isSelectAbCard = false
		
	end
	HallUI_InitControlPanelOnRoundStart()
	Rule_Add(HallUI_UpdateUI)
end

-- 轮次战斗开始时
function HallUI_OnDeploymentEnd()
	HallUI_Hide()
	Rule_Remove(HallUI_UpdateUI)
end

function HallUI_UpdateResourceAmount(playerId)
	local context = HallUI_GetContext()
	context.gold = PlayerMgr_GetGold(playerId)
	context.food = PlayerMgr_GetFood(playerId)
end

function HallUI_ChangeLocalPlayer(id)
	if UI_IsReplay() then 
		local playerId = Player_FromId(id)
		localPlayer = Core_GetPlayersTableEntry(playerId)
	end
end

-- 更新ui数据
function HallUI_UpdateContextData()
	-- 1、先更新最上栏的玩家角色信息
	local contextPlayers = HallUI_GetPlayers()
	contextPlayers = {}

	local enemy = Battle_GetLocalPlayerEnemy()
	
	for i, player in pairs(PLAYERS) do 
		--local roleId = player.roleId
		--if roleId ~= nil then
			--local role = TavernRole_GetRoleById(roleId)
			local width = 100
			local imgHeight  = math.ceil(width * 1080/1920)
			local height =  imgHeight + 10
			if player.id == localPlayer.id then 
				width = 120
				imgHeight  = math.ceil(width * 1080/1920)
				height = imgHeight + 10
			end
			local color = "#FFDB88"
			if enemy ~= nil and enemy.id == player.id then 
				color = "Red"
				width = 120
				imgHeight  = math.ceil(width * 1080/1920)
				height = imgHeight + 10
			end
		
			local health = player.health
			if health > 100 then 
				health = 100
			end
			
			local contextPlayer = {
				--role = role,
				level = PlayerMgr_GetLevel(player.id),
				health = PlayerMgr_GetHealth(player.id),
				width = width,
				playerName = Player_GetDisplayName(player.id).LocString,
				Color = color,
				imgHeight = imgHeight,
				height = height,
				healthWidth = math.ceil(width * health / 100),
				civIcon = AdaptIconPathForXaml(World_GetRaceIcon(player.race)),
				
				desc = RaceAbility_Get(player.id).desc,
				playerColor = UI_GetColourAsString(Player_GetUIColour(player.id)),
				isReady = player.start,
				changeLocalPlayerCmd = UI_CreateCommand("HallUI_ChangeLocalPlayer"),
				changeLocalPlayerCmdParam = tostring(Player_GetID(player.id)),
			}
			HallUI_AppendLocStrings(contextPlayer)
			table.insert(contextPlayers, contextPlayer)
		--end
	end

	HallUI_SetEnableRefreshAbilityCardsBtn(PlayerMgr_GetGold(localPlayer.id) > 0)
	
	--HallUI_SetCountDown(TavernRound_GetRemainingSec())
	HallUI_SetPlayers(contextPlayers)
	HallUI_SetSquadCards(localPlayer.id)
	HallUI_SetTempAreaSquadCards(localPlayer.id)
	HallUI_SetToBeSelectSquadCards(localPlayer.id)
	HallUI_SetToBeSelectAbilityCards(localPlayer.id)
	HallUI_UpdateControlPanel()
	HallUI_SetToBeSelectTripleBuyCards(localPlayer.id)
	HallUI_UpdateResourceAmount(localPlayer.id)
	HallUI_AppendLocStrings(HallUI_GetContext())
end

function HallUI_TripleBuyAtTempAreaPre(cardIdx)
	Network_CallEvent("HallUI_TripleBuyAtTempAreaNtw", cardIdx)
	HallUI_SetShowTripleBuy(true)
end

function HallUI_TripleBuyAtTempAreaNtw(playerId, cardData)
	if localPlayer.id == playerId then 
		HallUI_SetShowTripleBuy(true)
	end
	local cardIdx = tonumber(cardData)
	if not PlayerCard_CheckTempAreaSquadCardsIdxIsEmpty(playerId, cardIdx) then 
		-- TODO将卡牌添加到左侧，并需要将相关卡牌升级
		PlayerCard_TripleBuyCardStep1AtTempArea(playerId, cardIdx)
	end
end

-- 三连按钮
function HallUI_TripleBuyPre(cardId)
	Network_CallEvent("HallUI_TripleBuyPreNtw", cardId)
	HallUI_SetShowTripleBuy(true)
end

function HallUI_TripleBuyPreNtw(playerId, cardId)
	if localPlayer.id == playerId then 
		HallUI_SetShowTripleBuy(true)
	end
	
	if PlayerCard_CheckToBeSelectSquadCardsHadCardId(playerId, cardId) and PlayerMgr_GetFood(playerId) >= ConfigUtil_GetSquadCardPrice()  then 
		-- TODO将卡牌添加到左侧，并需要将相关卡牌升级
		PlayerCard_TripleBuyCardStep1(playerId, cardId)
		PlayerMgr_AddFood(playerId, -ConfigUtil_GetSquadCardPrice())
	end
end


-- 三连，点击卡牌
function HallUI_TripleBuy(cardIdx)
	Network_CallEvent("HallUI_TripleBuyNtw", cardIdx)
	HallUI_SetShowTripleBuy(false)
end

function HallUI_TripleBuyNtw(playerId, data) 
	if localPlayer.id == playerId then 
		HallUI_SetShowTripleBuy(false)
	end
	local cardIdx = tonumber(data)
	
	-- 将技能卡或单位卡牌添加进去
	PlayerCard_TripleBuyCardStep2(playerId, cardIdx)

end


-- 购买单位卡牌
function HallUI_BuySquadCards(cardData)
	-- cardData: toBeSelectCardId:cardIdx
	--print("HallUI_BuySquadCards")
	local trunk = string.split(cardData, "|")
	local selectedCardId = trunk[1]
	HallUI_SetCurrentBuySquadCardId(selectedCardId)
	Network_CallEvent("HallUI_BuySquadCardsNtw", cardData)
	--Music_PlayStinger("sfx_ui_event_queue_campaign_objective_start")
end

-- 购买单位卡牌Ntw
function HallUI_BuySquadCardsNtw(playerId, data)
	local trunk = string.split(data, "|")
	local selectedCardId = trunk[1]
	local cardIdx = nil 
	if #trunk > 1 then 
		cardIdx = tonumber(trunk[2])
	end
	if PlayerCard_CheckToBeSelectSquadCardsHadCardId(playerId, selectedCardId) and PlayerMgr_GetFood(playerId) >= ConfigUtil_GetSquadCardPrice() then 
		
		Core_CallDelegateFunctions("OnSquadCardBuy", playerId, selectedCardId, AREA_STANDARD)
		Core_CallDelegateFunctions("OnSquadCardEnter", playerId, selectedCardId, AREA_STANDARD)
		if cardIdx == nil then 
			PlayerCard_AddSquadCardsFromToBeSelectArea(playerId, selectedCardId)
		else 
			PlayerCard_InsertSquadCards(playerId, selectedCardId, cardIdx)
		end
		PlayerMgr_AddFood(playerId, -3)
		if playerId == localPlayer.id then 
			HallUI_SetCurrentBuySquadCardId(nil)
		end
	end
	
end

-- 点击单位卡牌的升级按钮
function HallUI_UpgradeSquadCard(cardIdx)
	HallUI_SetShowAbilityCards(true)
	-- cardData: abilityCardId, squadCardIdx
	Network_CallEvent("HallUI_UpgradeSquadCardNtw", cardIdx)
end

function HallUI_UpgradeSquadCardNtw(playerId, cardIdx)
	-- 玩家在选择卡牌
	local player = Core_GetPlayersTableEntry(playerId)
	if PlayerMgr_GetGold(playerId) >= 2 then 
		player.isSelectAbCard = true
		-- 减去技能卡牌价格
		PlayerMgr_AddGold(playerId, -ConfigUtil_GetAbilityCardPrice())
		-- 获得四张卡牌
		PlayerCard_SetToBeSelectAbilityCards(playerId, AbilityCards_RandGet(3, 1))
	end
end

-- 取消升级
function HallUI_CancelUpgradeSquadCard()
	HallUI_SetShowAbilityCards(false)
	Network_CallEvent("HallUI_CancelUpgradeSquadCardNtw", "")
end

function HallUI_CancelUpgradeSquadCardNtw(playerId, data)
	local player = Core_GetPlayersTableEntry(playerId)
	player.isSelectAbCard = false
	-- 返还一黄金
	PlayerMgr_AddGold(playerId, 1)
end

-- 购买技能卡牌
function HallUI_BuyAbilityCards(abilityCardId)
	--print("HallUI_BuyAbilityCards")
	HallUI_SetShowAbilityCards(false)
	-- cardData: abilityCardId, squadCardIdx
	local squadCardIdx = HallUI_GetCurrentSelectedSquadCardIdx()
	local data = abilityCardId .. "|" .. squadCardIdx
	Network_CallEvent("HallUI_BuyAbilityCardsNtw", data)
	HallUI_SetShowAbilityCards(false)
end

function HallUI_BuyAbilityCardsNtw(playerId, data)
	local trunk = string.split(data, "|")
	local abilityCardId = trunk[1]
	local squadCardIdx = tonumber(trunk[2])


	PlayerCard_AddAbilityToSquadCardFromToBeSelectAb(playerId, abilityCardId, squadCardIdx)
	Core_CallDelegateFunctions("OnAbilityCardBuy", abilityCardId, squadCardIdx)

	
	local player = Core_GetPlayersTableEntry(playerId)
	player.isSelectAbCard = false
	
end

-- 刷新能力卡牌
function HallUI_RefreshAbilityCards()
	Network_CallEvent("HallUI_RefreshAbilityCardsNtw", "")
end
 
function HallUI_RefreshAbilityCardsNtw(playerId, data)
	if PlayerMgr_GetGold(playerId) >= 1 then 
		-- 获得四张卡牌
		PlayerCard_SetToBeSelectAbilityCards(playerId, AbilityCards_RandGet(3, 1))
		PlayerMgr_AddGold(playerId, -1)
	end
end

-- 出售单位卡牌
function HallUI_SellSquadCards(cardData)
	Network_CallEvent("HallUI_SellSquadCardsNtw", cardData)
end

-- 出售单位卡牌
function HallUI_SellSquadCardsNtw(playerId, cardData)
	local trunks = string.split(cardData, "|")
	local cardIdx = tonumber(trunks[1])
	local areaType = trunks[2]
	-- TODO
	if (areaType == AREA_STANDARD and not PlayerCard_CheckSquadCardsIdxIsEmpty(playerId, cardIdx))
		or (areaType == AREA_TEMP and not PlayerCard_CheckTempAreaSquadCardsIdxIsEmpty(playerId, cardIdx)) then
		Core_CallDelegateFunctions("OnSquadCardSale", playerId, cardIdx, areaType)
		if areaType == AREA_STANDARD then 
			PlayerCard_SellSquadCards(playerId, tonumber(cardIdx))
		elseif areaType == AREA_TEMP then 
			PlayerCard_SellSquadCardsFromTempArea(playerId, tonumber(cardIdx))
		end
	end
end

-- 点击mini卡牌事件, 将卡牌切换成完整视图
function HallUI_MiniCardClickCommand(data)
	local trunks = string.split(data, "|")
	local squadCardIdx = tonumber(trunks[1])
	local areaType = trunks[2]
	if areaType == AREA_STANDARD then 
		HallUI_SetCurrentSelectedSquadCardIdx(squadCardIdx)
		local squadCards = PlayerCard_GetSquadCards(localPlayer.id)
		for i, squadCard in pairs(squadCards) do 
			if squadCard.index == tonumber(squadCardIdx) then 
				squadCard.showType = CARD_SHOW_FULL
			elseif squadCard.showType == CARD_SHOW_FULL then 
				squadCard.showType = CARD_SHOW_MINI
			end
		end
	elseif areaType == AREA_TEMP then 
		HallUI_SetCurrentSelectedTempAreaSquadCardIdx(squadCardIdx)
		local squadCards = PlayerCard_GetTempAreaSquadCards(localPlayer.id)
		for i, squadCard in pairs(squadCards) do 
			if squadCard.index == tonumber(squadCardIdx) then 
				squadCard.showType = CARD_SHOW_FULL
			elseif squadCard.showType == CARD_SHOW_FULL then 
				squadCard.showType = CARD_SHOW_MINI
			end
		end
	end
end

-- 单位卡牌刷新
function HallUI_RefreshCommand()
	local food = PlayerMgr_GetFood(localPlayer.id)
	if food > 0 then 
		Network_CallEvent("HallUI_RefreshCommandNtw", "")
	end
end


function HallUI_RefreshCommandNtw(playerId, data)
	local food = PlayerMgr_GetFood(playerId)
	if food > 0 then 
		-- 刷新需要消耗1食物
		PlayerMgr_AddFood(playerId, -1)
		
		PlayerCard_SetToBeSelectSquadCards(playerId, SquadCards_RandGetSquadCards(playerId, PlayerMgr_GetRefreshSquadCardsCount(playerId)))
	end

end

-- 锁定命令
function HallUI_ToggleLockBtnCommand()
	local state = not HallUI_GetLockBtnIsLocked()
	HallUI_SetLockBtnIsLocked(state)
	local data = nil
	if state then 
		data = "1"
		HallUI_SetLockBtnText(Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:42"))
	else 
		data = "0"
		HallUI_SetLockBtnText(Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:41"))
	end
	
	Network_CallEvent("HallUI_ToggleLockBtnCommandNtw", data)
end


function HallUI_ToggleLockBtnCommandNtw(playerId, data)
	local flag = false
	if data == "1" then 
		flag = true
	end
	PlayerCard_SetIsLockedCard(playerId, flag)
end


function HallUI_ReadyCommand()
	HallUI_SetEnableReadyBtn(false)
	Network_CallEvent("HallUI_ReadyCommandNtw", "")
end

function HallUI_ReadyCommandNtw(playerId, data)
	local player = Core_GetPlayersTableEntry(playerId)
	player.start = true
	local readyCount = 0
	local aliveCount = 0
	for i, p in pairs(PLAYERS) do 
		if Player_IsAlive(p.id) then 
			if not p.isHuman then 
				p.start = true
			end
			if p.start then 
				readyCount = readyCount + 1
			end
			aliveCount = aliveCount + 1
		end
	end
	HallUI_SetReadyPlayerCount(readyCount)
	HallUI_SetAlivePlayerCount(aliveCount)
	if aliveCount == readyCount then 
		HallUI_UpdateUI()
		Rule_Remove(HallUI_UpdateUI)
		TavernRound_DeploymentStart()

	

	end
	UI_CreateEventCue(Loc_FormatText("$aa0406c7490b4889acebb0e09301e10f:130", player.playerName), nil, "", "", "sfx_ui_event_queue_med_priority_play")
end

function HallUI_LevelupCommand()
	Network_CallEvent("HallUI_LevelupCommandNtw", "")
end

function HallUI_LevelupCommandNtw(playerId, data)
	if PlayerMgr_GetFood(playerId) >= PlayerMgr_GetLevelupCost(playerId) and PlayerMgr_GetLevel(playerId) < 6 then
		PlayerMgr_AddFood(playerId, -PlayerMgr_GetLevelupCost(playerId))
		PlayerMgr_LevelUp(playerId)
	end
end


function HallUI_AppendLocStrings(data)
	for i = 9, 46 do 
		data["loc"..i] = Loc_GetString("$aa0406c7490b4889acebb0e09301e10f:"..i)
	end
end


function HallUI_ChangeSpawnPosCmd(data)
	local trunks = string.split(data, "|")
	local cardIdx = tonumber(trunks[1])
	local areaType = trunks[2]
	HallUI_SetChangeSpawnPosCardIdx(cardIdx)
	HallUI_SetShowChangeSpawnPosUI(true)
	
	Network_CallEvent("HallUI_ChangeSpawnPosCmdNtw", data)
	

end

function HallUI_CloseSpawnPosUI()
	HallUI_SetShowChangeSpawnPosUI(false)
end

function HallUI_ChangeSpawnPosCmdNtw(playerId, data)
	local trunks = string.split(data, "|")
	local cardIdx = tonumber(trunks[1])
	local areaType = trunks[2]
	local player = Core_GetPlayersTableEntry(playerId)
	player.changeSpawnPosCardIdx = cardIdx
	if playerId == localPlayer.id then 
		local card = nil 
		if areaType == AREA_STANDARD then 
			card = PlayerCard_GetSquadCardByIdx(localPlayer.id, cardIdx)
		else
			card = PlayerCard_GetTempAreaSquadCardByIdx(localPlayer.id, cardIdx)
		end
		local list = Ground_GetSpawnPosContext(localPlayer.id, card, areaType)
		_hall_ui_data.context.spawnPosList = list
		HallUI_SetShowChangeSpawnPosUI(true)
	end
end

function HallUI_DoChangeSpawnPosCmd(data)
	Network_CallEvent("HallUI_DoChangeSpawnPosCmdNtw", data)
	HallUI_SetShowChangeSpawnPosUI(false)
end

function HallUI_DoChangeSpawnPosCmdNtw(playerId, data)
	local trunks = string.split(data, "|")
	local spawnPosIdx = tonumber(trunks[1])
	local areaType = trunks[2]
	local player = Core_GetPlayersTableEntry(playerId)
	local cardIdx = player.changeSpawnPosCardIdx
	local card = nil 
	if areaType == AREA_STANDARD then 
		card = PlayerCard_GetSquadCardByIdx(playerId, cardIdx)
	else
		card = PlayerCard_GetTempAreaSquadCardByIdx(playerId, cardIdx)
	end
	
	PlayerCard_SetSquadCardSpawnPosIdx(card, spawnPosIdx)
end

