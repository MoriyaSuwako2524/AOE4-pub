import ("util/common_header.scar")
import ("cards/squad_cards.scar")

-- 挑选角色UI
_observer_ui = [[<Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0" 
		xmlns:engineHUDPages="clr-namespace:WPFGUI.HUD.Pages;assembly=EngineUI"
		Orientation="Horizontal" Visibility="{Binding [show], Converter={StaticResource BoolToVis}}" 
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		Height="{Binding ActualHeight, ElementName=TheHUDPage}" Width="{Binding ActualWidth, ElementName=TheHUDPage}"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:esControls="clr-namespace:WPFGUI.Shared.Controls;assembly=EngineUI"		
		xmlns:esUtility="clr-namespace:WPFGUI.Shared.Utility;assembly=EngineUI"
		xmlns:engineSharedEffects="clr-namespace:WPFGUI.Shared.Effects;assembly=EngineUI.Shaders"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

	<Grid.Resources>
		<Style x:Key="CardButtonStyle" TargetType="Button">
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="Transparent" />
	        <Setter Property="SnapsToDevicePixels" Value="true" />
	        <Setter Property="OverridesDefaultStyle" Value="true" />
	        <Setter Property="HorizontalAlignment" Value="Left" />
	        <Setter Property="Width" Value="47" />
	        <Setter Property="Height" Value="47" />
			<Setter Property="Opacity" Value="1" />
			<Setter Property="esUtility:AudioAttachedProperty.PreviewMouseLeftButtonUpSound"
	                Value="sfx_ui_hud_inGame_button_play" />
	        <Setter Property="Template">
	            <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                 	<Border Name="ResourceButton">
	                        <Grid>
								<!--
								<Border Background="{DynamicResource TertiaryColorLightBrush}">
									<Border>
										<Border.Background>
											<RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.7" RadiusY="0.6">
										        <GradientStop Offset="0" Color="{DynamicResource TertiaryColorExtraLight}" />
										        <GradientStop Offset="1" Color="{DynamicResource TertiaryColorExtraLightTransparent}" />
										    </RadialGradientBrush>
										</Border.Background>
									</Border>
                                </Border>
								-->
								
	                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	                        </Grid>
	                    </Border>
	                    <ControlTemplate.Triggers>
	                        <Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Opacity" Value="1" />
	                        </Trigger>
	                      
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
	    </Style>	
		
		<Style x:Key="StyleDockPanelDockRight" TargetType="ContentPresenter">
			<Setter Property="DockPanel.Dock" Value="Right"/>
		</Style>
		
		<Style x:Key="StyleDockPanelDockLeft" TargetType="ContentPresenter">
			<Setter Property="DockPanel.Dock" Value="Left"/>
		</Style>
		<Style x:Key="TavernButtonStyle" TargetType="Button">
	        <Setter Property="SnapsToDevicePixels" Value="true" />
	        <Setter Property="OverridesDefaultStyle" Value="true" />
	        <Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="BorderThickness"  Value="0" />
			<Setter Property="esUtility:AudioAttachedProperty.PreviewMouseLeftButtonUpSound"
	                Value="sfx_ui_hud_inGame_button_play" />
	        <Setter Property="Template">
	            <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                 	<Border Name="ResourceButton">
	                        <Grid>
								<!--
								<Border Background="{DynamicResource TertiaryColorLightBrush}">
									<Border>
										<Border.Background>
											<RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.7" RadiusY="0.6">
										        <GradientStop Offset="0" Color="{DynamicResource TertiaryColorExtraLight}" />
										        <GradientStop Offset="1" Color="{DynamicResource TertiaryColorExtraLightTransparent}" />
										    </RadialGradientBrush>
										</Border.Background>
									</Border>
                                </Border>
								-->
								
	                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	                        </Grid>
	                    </Border>
	                    <ControlTemplate.Triggers>
	                        <Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Opacity" Value="1" />
	                        </Trigger>
	                      
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
	    </Style>	
		
		<DropShadowEffect x:Key="DropShadow" BlurRadius="0.5" ShadowDepth="1.5"  />

		<DataTemplate x:Key="FoodsUi">
		<Button Width="100" Height="{StaticResource HUDBuildQueueIconSize}"
				Margin="2,4,2,0"
				ToolTipService.InitialShowDelay="0"
    			ToolTipService.ShowDuration="86400000"
				ToolTipService.ShowOnDisabled="True"
				Style="{StaticResource CardButtonStyle}" 
				Command="{Binding [changeLocalPlayerCmd]}"
				CommandParameter="{Binding [changeLocalPlayerCmdParam]}"
				>
				
				<Button.Content>
			<Border  BorderThickness="2" BorderBrush="{Binding [color]}" HorizontalAlignment="Left" Name="FoodsB" >
				<Grid>
					<Rectangle 
							Width="100"
							Height="{StaticResource HUDBuildQueueIconSize}"
							Fill="{StaticResource ResearchButtonBgBrush}" />
					<Rectangle 
							Width="100"
							Height="{StaticResource HUDBuildQueueIconSize}"
							Fill="{StaticResource ResearchLightButtonBgHighlightBrush}" />
					
					<TextBlock 
							VerticalAlignment="Top"	
							Width="100"
							Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
	                    	Text="{Binding [name]}"
							TextTrimming="CharacterEllipsis" 
							TextAlignment="Center"
							>
						<TextBlock.ToolTip>
                            <ToolTip Style="{StaticResource HUDBaseAutoTooltipStyle}" />
					</TextBlock.ToolTip>
					</TextBlock>  
					<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom"
							HorizontalAlignment="Center" Height="25">
					<Image  VerticalAlignment="Bottom"
							Width="25"
								Height="25"
							Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_food_icon.png"/>
					
	                <TextBlock 
							VerticalAlignment="Bottom"	
							Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
	                    	Text="{Binding [price], Converter={StaticResource CastToIntOperator}}" 
							/>  
					</StackPanel>
				</Grid>
			</Border>
					</Button.Content>
			</Button>
			<DataTrigger Binding="{Binding [IsRightSide]}" Value="true">
				<Setter TargetName="FoodsB" Property="HorizontalAlignment" Value="Right"/>
			</DataTrigger>
		</DataTemplate>
		
		
		<DataTemplate x:Key="ObserverUiUnits">
	        <StackPanel Orientation="Horizontal" Name="lqbc">
				<ContentControl Content="{Binding}" ContentTemplate="{StaticResource FoodsUi}" />
				<ItemsControl Name="ObserverUiUnitsListOfPlayer" 
					ItemsSource="{Binding [squads]}"
					ItemContainerStyle="{StaticResource StyleDockPanelDockRight}" 
					HorizontalAlignment="Left">
	            <ItemsControl.ItemsPanel>
	                <ItemsPanelTemplate>
	                    <DockPanel/>
	                </ItemsPanelTemplate>
	            </ItemsControl.ItemsPanel>
	
	            <ItemsControl.ItemTemplate>
	                <DataTemplate>
						<Border Margin="2,4,2,0" BorderThickness="2" BorderBrush="{Binding [Color]}">
							<Grid>
								<Rectangle Name="UnitBackground1"
									Width="{StaticResource HUDBuildQueueIconSize}"
									Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource MilitaryButtonBgBrush}" />
					
							<Rectangle Name="UnitBackground2"
									Width="{StaticResource HUDBuildQueueIconSize}"
									Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource MilitaryLightButtonBgHighlightBrush}" />
					
								<Image 
										Width="{StaticResource HUDBuildQueueIconSize}"
	           							Height="{StaticResource HUDBuildQueueIconSize}"
										Source="{Binding [icon]}"/>
	                            <TextBlock 
											
										VerticalAlignment="Bottom"
										HorizontalAlignment="Right"
										Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
	                                	Text="{Binding [count], Converter={StaticResource CastToIntOperator}}" />
								
							</Grid>
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
				
			</StackPanel>
			<DataTemplate.Triggers>
                <DataTrigger Binding="{Binding [IsRightSide]}" Value="true">
		            <Setter TargetName="ObserverUiUnitsListOfPlayer" Property="HorizontalAlignment" Value="Right"/>
		            <Setter TargetName="ObserverUiUnitsListOfPlayer" Property="ItemContainerStyle" Value="{StaticResource StyleDockPanelDockLeft}" />
					<Setter TargetName="lqbc" Property="FlowDirection" Value="RightToLeft"/>
		        </DataTrigger>
            </DataTemplate.Triggers>
		</DataTemplate>		
		
		
		<DataTemplate x:Key="ObserverUiTeamUnits">
			<StackPanel Name="ObserverUiTeamDetails" FlowDirection="LeftToRight">
				<ItemsControl ItemsSource="{Binding}">
		            <ItemsControl.ItemTemplate>
		                <DataTemplate>
							<ContentControl
								ContentTemplate="{StaticResource ObserverUiUnits}"
								Content="{Binding}" />
		                </DataTemplate>
		            </ItemsControl.ItemTemplate>
		        </ItemsControl>
			</StackPanel>
			
			<DataTrigger Binding="{Binding [0][IsRightSide]}" Value="true">
				<Setter TargetName="ObserverUiTeamDetails" Property="FlowDirection" Value="RightToLeft"/>
			</DataTrigger>
		</DataTemplate>
		
		<sys:Double x:Key="LevelWidth">60</sys:Double>
		
		
		<!--  MilitaryTemplate  -->
        <DataTemplate x:Key="PlayerCardsTemplate">
            <ListView ItemsSource="{Binding [playerCards]}" Style="{StaticResource ReplayStatListViewStyle}">
                <ListView.View>
                    <GridView AllowsColumnReorder="False" ColumnHeaderContainerStyle="{StaticResource GridCellHeaderLeftAlignedCentered}">
                        <!--  units killed  -->
                        <GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter x:Name="UnitsKilledHeaderContent" Width="100" Content="玩家" HorizontalAlignment="Center">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="玩家"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=UnitsKilledHeaderContent, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=UnitsKilledHeaderContent}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [name]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
												   Foreground="{Binding [color]}"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        
						 <!--  units killed  -->
                        <GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter x:Name="levelHeaderContent1" Width="{StaticResource LevelWidth}" Content="一">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="一"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level1]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
						
						<GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter  Width="{StaticResource LevelWidth}" Content="二">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="二"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level2]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
						
						<GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter  Width="{StaticResource LevelWidth}" Content="三">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="三"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level3]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
						
						<GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter  Width="{StaticResource LevelWidth}" Content="四">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="四"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level4]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
						
						<GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter  Width="{StaticResource LevelWidth}" Content="五">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="五"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level5]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
						
						<GridViewColumn>
                            <GridViewColumn.Header>
                                <!--  $11172101: Killed  -->
                                <ContentPresenter  Width="{StaticResource LevelWidth}" Content="六">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <Grid MaxWidth="{StaticResource GridColumnMaxWidthWithIcon}"
                                                  Margin="{StaticResource SmallMarginRight}"
                                                  Background="Transparent" ToolTipService.InitialShowDelay="0"
                                                  ToolTipService.Placement="Mouse" ToolTipService.ShowDuration="86400000">
                                                <TextBlock 
                                                           VerticalAlignment="Center"

                                                           esControls:TextBlockExtensions.AutoToolTip="True"
                                                           Style="{StaticResource HUDTitleAltTextBlockStyle}"
                                                           Text="六"
                                                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
                                            </Grid>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate >
                                    <Grid Width="{Binding ActualWidth, ElementName=levelHeaderContent1, Converter={StaticResource AddOperator}, ConverterParameter=6}"
                                          Height="{StaticResource ReplayStatRowHeight}"
                                          Margin="{StaticResource ValueColumnGapFixMargin}"
                                          VerticalAlignment="Center">
                                       
                                        <TextBlock Width="{Binding ActualWidth, ElementName=levelHeaderContent1}"
                                                   Margin="{StaticResource CellTextNegativeRightOffsetMargin}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                                   Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
                                                   Text="{Binding [level6]}"
												   TextTrimming="CharacterEllipsis" 
												   esControls:TextBlockExtensions.AutoToolTip="True"
                                                   TextAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
						
                    </GridView>
                </ListView.View>
            </ListView>
        </DataTemplate>
		
	</Grid.Resources>
		
	
	<ContentControl HorizontalAlignment="Left" Margin="0,240,0,0"  Visibility="{Binding [showBattle], Converter={StaticResource BoolToVis}}" 
				ContentTemplate="{StaticResource ObserverUiTeamUnits}"
				Content="{Binding [battle][left]}" />


	<ContentControl HorizontalAlignment="Right" Margin="0,240,0,0" Visibility="{Binding [showBattle], Converter={StaticResource BoolToVis}}" 
				ContentTemplate="{StaticResource ObserverUiTeamUnits}"
				Content="{Binding [battle][right]}" />
	
	<ContentControl HorizontalAlignment="Right" Margin="0,455,0,0" Visibility="{Binding [showPlayerCards], Converter={StaticResource BoolToVis}}" 
				ContentTemplate="{StaticResource PlayerCardsTemplate}"
				Content="{Binding}" />
</Grid>

]]


_observer_ui_data = {
	name = "observer_ui",
	context = {
		show = true,
		battle = {
			left = {
				
			},
			right = {
				
			},
		},
		playerCards = {
			
		},
		showBattle = false,
		showPlayerCards = false,
	},
	
}


Core_RegisterModule("ObserverUI")

function ObserverUI_OnInit()
	
end

function ObserverUI_Start()
	ObserverUI_UpdateContext()

	Rule_AddInterval(ObserverUI_UpdateUI, 1)
	
	UI_AddChild("ScarDefault", "XamlPresenter", _observer_ui_data.name, { IsHitTestVisible = true, Xaml = _observer_ui, DataContext = UI_CreateDataContext(_observer_ui_data.context) })
end

-- 更新UI
function ObserverUI_UpdateUI()
	ObserverUI_UpdateContext()
	UI_SetDataContext(_observer_ui_data.name, _observer_ui_data.context)
end

-- 更新ui数据
function ObserverUI_UpdateContext()
	
	if _observer_ui_data.context.showBattle then 
		ObserverUI_UpdateCombatInfo()
	end
	
	if _observer_ui_data.context.showPlayerCards then 
		local list = {}
		for _, player in pairs(PLAYERS) do 
			if Player_IsAlive(player.id) then 
				table.insert(list, ObserverUI_GetCardsDisByPlayer(player))
			end
		end
		_observer_ui_data.context.playerCards = list
		--Util_PrintTable(list)
	end
end


function ObserverUI_OnRoundStart()
	_observer_ui_data.context.showPlayerCards = UI_IsReplay()
	_observer_ui_data.context.showBattle = false
end

function ObserverUI_OnDeploymentStart()
	_observer_ui_data.context.showBattle = UI_IsReplay()
	_observer_ui_data.context.showPlayerCards = false
end

-- 获取战斗数据
function ObserverUI_UpdateCombatInfo()
	local leftData = {
	}
	
	local rightData = {
	}
	
	for _, arr in pairs(_current_battles) do 
		local leftPlayer = arr[1]
		local rightPlayer = arr[2]
		table.insert(leftData, ObserverUI_GetPlayerCombatData(leftPlayer, false))
		table.insert(rightData, ObserverUI_GetPlayerCombatData(rightPlayer, true))
	end
	
	_observer_ui_data.context.battle.left = leftData
	_observer_ui_data.context.battle.right = rightData
end

-- 更新玩家的战斗数据
function ObserverUI_GetPlayerCombatData(player, isRightSide)
	local data = {}
	data.name = Player_GetDisplayName(player.id).LocString
	local icons = {}
	
	local sg = Player_GetSquads(player.id)
	local count = SGroup_CountSpawned(sg)
	local price = 0
	if count > 0 then 
		for i = 1, count do 
			local s = SGroup_GetSpawnedSquadAt(sg, i)
			if s ~= nil then 
				local bp = Squad_GetBlueprint(s)
				local bpName = BP_GetName(bp)
				local race = Util_GetRaceBySBP(bpName)
				if race ~= nil then 
					price = price + Util_GetSquadsPrice(race, bpName)
					local icon = Util_GetSquadIcon(bpName)
					if icon ~= nil then 
						if icons[icon] == nil then 
							icons[icon] = 1
						else 
							icons[icon] = icons[icon] + 1
						end
					end
				end
			end
		end
	end
	local squads = {}
	for icon, c in pairs(icons) do 
		table.insert(squads, {
				icon = icon,
				count = c,
				Color = UI_GetColourAsString(Player_GetUIColour(player.id))
			})
	end
	data.color = UI_GetColourAsString(Player_GetUIColour(player.id))
	data.price = price
	data.squads = squads
	data.civIcon = AdaptIconPathForXaml(World_GetRaceIcon(player.race))
	data.IsRightSide = isRightSide
	data.changeLocalPlayerCmd = UI_CreateCommand("ObserverUI_ChangeLocalPlayer")
	data.changeLocalPlayerCmdParam = tostring(Player_GetID(player.id))
	return data
end

function ObserverUI_ChangeLocalPlayer(id)
	local playerId = Player_FromId(id)
	local player = Core_GetPlayersTableEntry(playerId)
	if UI_IsReplay() then 
		
		localPlayer = player
	end
	
	local GetZoom = Camera_GetZoomDist()
	local ground = player.ground
	local center = Ground_GetCenterPos(ground)
	Camera_StartPanTo(center, 1, GetZoom)
	
end

-- 获取卡牌分布
function ObserverUI_GetCardsDisByPlayer(player)
	local data = {
		name = Player_GetDisplayName(player.id).LocString,
		color = UI_GetColourAsString(Player_GetUIColour(player.id)),
	}
	local cards = PlayerCard_GetSquadCards(player.id)
	local count = #cards 
	local tripleRewardCounter = {0,0,0,0,0,0}
	local levelCounter = {0,0,0,0,0,0}
	
	for _, card in pairs(cards) do 
		local squadCard = card.card 
		if squadCard ~= nil then 
			local level = squadCard.level 
			if levelCounter[level] == nil then 
				levelCounter[level] = 0
			end
			levelCounter[level] = levelCounter[level] + 1
			if not SquadCards_IsNormalCard(squadCard) then 
				if tripleRewardCounter[level] == nil then 
					tripleRewardCounter[level] = 0
				end
				tripleRewardCounter[level] = tripleRewardCounter[level] + 1
			end
		end
	end
	
	for i, count in pairs(levelCounter) do 
		 data["level"..i] = string.format("%s/%s", tripleRewardCounter[i], count)
	end
	return data
end


function ObserverUI_GetCardsPrice(player)
	
end

-- 刷新定时器
function ObserverUI_Interval()
	
end